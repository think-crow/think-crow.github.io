<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on HaoshuangRen</title><link>https://think-crow.github.io/blog/</link><description>Recent content in Blogs on HaoshuangRen</description><generator>Hugo -- gohugo.io</generator><copyright>2024 HaoshuangRen All rights reserved</copyright><lastBuildDate>Thu, 03 Apr 2025 13:26:05 +0800</lastBuildDate><atom:link href="https://think-crow.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>区别</title><link>https://think-crow.github.io/blog/zh/2025-04-03-%E9%97%AEgpt%E8%87%AA%E5%B7%B1%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E5%A4%A7%E6%8A%80%E6%9C%AF%E7%89%9B%E4%BA%BA%E7%9A%84%E9%97%AE%E9%A2%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link><pubDate>Thu, 03 Apr 2025 13:26:05 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/2025-04-03-%E9%97%AEgpt%E8%87%AA%E5%B7%B1%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E5%A4%A7%E6%8A%80%E6%9C%AF%E7%89%9B%E4%BA%BA%E7%9A%84%E9%97%AE%E9%A2%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid><description>&lt;p>问：通过这么久的接触，你感觉我的问话和一些技术牛人的问话有什么不足&lt;/p>
&lt;p>答：&lt;/p>
&lt;p>你的问题已经很有条理了，而且你在探索 Hugo、Node.js 这些技术时，思路也很清晰，能提出有针对性的问题，比如 Hugo 的 &lt;strong>模板语法、JSON 数据加载、分页、Vue 迁移&lt;/strong> 等，这些都是深入使用 Hugo 过程中会遇到的实际问题。&lt;/p>
&lt;p>如果说和一些技术大牛相比有什么不同，主要可能在于：&lt;/p>
&lt;h3 id="1-问题的深度--拓展性">&lt;strong>1. 问题的深度 &amp;amp; 拓展性&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>你的问题大多围绕 &lt;strong>“如何实现某个功能”&lt;/strong>，比如“如何在 Hugo 里用 JSON 进行动态加载”。&lt;/li>
&lt;li>技术大牛可能会进一步问：
&lt;ul>
&lt;li>&lt;strong>“Hugo 在这方面的底层机制是什么？”&lt;/strong>（比如 Hugo 如何处理 &lt;code>.Data&lt;/code> 结构）&lt;/li>
&lt;li>&lt;strong>“有没有更好的替代方案？”&lt;/strong>（比如用 Hugo Pipes 预处理 JSON，或者用前端框架）&lt;/li>
&lt;li>&lt;strong>“如何优化性能？”&lt;/strong>（如 &lt;strong>缓存策略、构建优化&lt;/strong>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>👉 &lt;strong>改进方向&lt;/strong>：
当你遇到问题时，可以多问自己：&lt;strong>“为什么 Hugo 是这样设计的？”&lt;/strong>、“如果换成另一种方案（如 VuePress、Astro），会不会更优雅？”&lt;/p>
&lt;hr>
&lt;h3 id="2-解决方案的多样性">&lt;strong>2. 解决方案的多样性&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>你倾向于先找 &lt;strong>Hugo 本身的功能&lt;/strong> 来实现需求，像 &lt;strong>用 list 模板展示文章、改 &lt;code>single.html&lt;/code> 适配诗集&lt;/strong>，这没问题，但有时候可能受 Hugo 的限制。&lt;/li>
&lt;li>技术大牛可能会更快跳出框架，比如：
&lt;ul>
&lt;li>“这个功能 &lt;strong>真的要用 Hugo 来做吗？&lt;/strong>”&lt;/li>
&lt;li>“能否结合 &lt;strong>CDN / JS 动态加载 / API 接口&lt;/strong> 让网站更灵活？”&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>👉 &lt;strong>改进方向&lt;/strong>：
以后遇到 Hugo 限制时，可以想想：“如果不用 Hugo，这个问题怎么解决？”——有时候更通用的方案可能更好。&lt;/p>
&lt;hr>
&lt;h3 id="3-代码实践--debug-方式">&lt;strong>3. 代码实践 &amp;amp; Debug 方式&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>你的问题很注重 &lt;strong>Hugo 逻辑和概念&lt;/strong>，但相对较少涉及 &lt;strong>代码调试和优化&lt;/strong>。&lt;/li>
&lt;li>技术大牛通常会直接拿出 &lt;strong>代码片段 + 测试方式&lt;/strong>，比如：
&lt;ul>
&lt;li>直接写个 &lt;strong>&lt;code>range&lt;/code> 迭代 demo&lt;/strong>，看看 &lt;code>.Data.Pages&lt;/code> 里有什么&lt;/li>
&lt;li>用 &lt;code>hugo --debug&lt;/code> 检查构建日志&lt;/li>
&lt;li>用 Hugo Pipes 预处理 JSON，看看构建时间是否优化&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>👉 &lt;strong>改进方向&lt;/strong>：
你可以尝试：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>更多动手实验&lt;/strong>：写个 Hugo 测试站点，专门做各种 Hugo 逻辑测试。&lt;/li>
&lt;li>&lt;strong>掌握 Debug 技巧&lt;/strong>：学会用 &lt;code>hugo --verbose&lt;/code>，以及 &lt;code>console.log&lt;/code> 打印前端调试数据。&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="4-关注前沿动态--生态">&lt;strong>4. 关注前沿动态 &amp;amp; 生态&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>你的问题主要是 &lt;strong>“如何用好 Hugo”&lt;/strong>，但 Hugo 只是 Web 生态的一部分。&lt;/li>
&lt;li>技术大牛通常会关注 Hugo 在整个 &lt;strong>静态网站生成器&lt;/strong> 生态中的位置，比如：
&lt;ul>
&lt;li>“Hugo 相比 Astro、Next.js，优势和劣势是什么？”&lt;/li>
&lt;li>“Hugo 未来是否还适合大型站点？”&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>👉 &lt;strong>改进方向&lt;/strong>：
如果你有兴趣，可以看看其他静态网站框架（如 &lt;strong>Astro、Eleventy、Next.js&lt;/strong>），对比它们的思路，拓宽技术视野。&lt;/p>
&lt;hr>
&lt;h3 id="总结">&lt;strong>总结&lt;/strong>&lt;/h3>
&lt;p>你已经比大多数人更深入 Hugo 了，只要再在 &lt;strong>深度、拓展性、代码实践、技术前沿&lt;/strong> 这些方面多思考，你的技术视角会越来越广。&lt;/p>
&lt;p>如果你想进一步提高，我建议你可以试试：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>写点 Hugo 技术博客&lt;/strong>，总结你的经验（写作会让思路更清晰）。&lt;/li>
&lt;li>&lt;strong>尝试 Hugo 以外的框架&lt;/strong>，比如 &lt;strong>Astro / Next.js&lt;/strong>，看看它们的设计思路。&lt;/li>
&lt;li>&lt;strong>多问“为什么”&lt;/strong>，别满足于“能实现”，而是去想“这样实现是否最优”。&lt;/li>
&lt;/ol>
&lt;p>你觉得这些建议有用吗？或者你有更具体的想法？😃&lt;/p>
&lt;h3 id="问现在由你来训练我描述问题的能力你会怎么训练我">问：现在由你来训练我描述问题的能力，你会怎么训练我&lt;/h3>
&lt;h6 id="chatgpt-说">ChatGPT 说：&lt;/h6>
&lt;p>如果我要训练你提升 &lt;strong>描述问题的能力&lt;/strong>，我会从 &lt;strong>结构化表达、精准提问、代码示例、Debug 思维&lt;/strong> 这四个方面入手，帮你形成清晰的思考和表达方式。训练方式包括 &lt;strong>即时反馈 + 进阶挑战&lt;/strong>，让你在实践中提升。&lt;/p>
&lt;hr>
&lt;h2 id="第一阶段基础训练结构化表达问题">&lt;strong>第一阶段：基础训练（结构化表达问题）&lt;/strong>&lt;/h2>
&lt;h3 id="目标让你的问题清晰完整让别人能快速理解你的需求">&lt;strong>目标：让你的问题清晰、完整，让别人能快速理解你的需求。&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>训练方法&lt;/strong>：
我会给你一个不清晰的问题，你来优化它，让它更具体、可回答。&lt;/p>
&lt;h4 id="示例-1原始问题模糊">&lt;strong>示例 1：原始问题（模糊）&lt;/strong>&lt;/h4>
&lt;p>❌ &lt;strong>“Hugo 里的 list 页面怎么改？”&lt;/strong> （范围太大，别人不知道你想改什么）&lt;/p>
&lt;h4 id="优化后结构化">&lt;strong>优化后（结构化）&lt;/strong>&lt;/h4>
&lt;p>✅ **“我想在 Hugo 的 list 页面中，按‘年/月/日’分组显示文章，目前的代码是这样：&lt;/p>
&lt;pre tabindex="0">&lt;code>go复制编辑{{ range .Pages }}
&amp;lt;li&amp;gt;{{ .Title }} - {{ .Date }}&amp;lt;/li&amp;gt;
{{ end }}
&lt;/code>&lt;/pre>&lt;p>但它只是简单按时间顺序排列，我该如何按‘年/月/日’分组？”**&lt;/p>
&lt;p>👉 &lt;strong>训练方式&lt;/strong>：
我先给你一个模糊问题，你来优化它。如果你的问题还有不清楚的地方，我会指出来，并让你继续改进。&lt;/p>
&lt;hr>
&lt;h2 id="第二阶段精准提问减少试错">&lt;strong>第二阶段：精准提问（减少试错）&lt;/strong>&lt;/h2>
&lt;h3 id="目标让你一次就问到点子上避免来回试错">&lt;strong>目标：让你一次就问到点子上，避免“来回试错”。&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>训练方法&lt;/strong>：
我会给你一个问题场景，你用 &lt;strong>最少的描述&lt;/strong> 提出一个 &lt;strong>能直接得到答案&lt;/strong> 的问题。&lt;/p>
&lt;h4 id="示例-2原始问题试错型">&lt;strong>示例 2：原始问题（试错型）&lt;/strong>&lt;/h4>
&lt;p>❌ &lt;strong>“Hugo 能用 JSON 吗？”&lt;/strong>
👉 这个问题太宽泛了，你是想 &lt;strong>用 JSON 作为数据源，还是想把 Hugo 文章转 JSON？&lt;/strong>&lt;/p>
&lt;h4 id="优化后精准">&lt;strong>优化后（精准）&lt;/strong>&lt;/h4>
&lt;p>✅ **“我有一个 &lt;code>data/posts.json&lt;/code> 文件，里面存着文章数据：&lt;/p>
&lt;pre tabindex="0">&lt;code>json复制编辑[
{ &amp;#34;title&amp;#34;: &amp;#34;第一篇&amp;#34;, &amp;#34;date&amp;#34;: &amp;#34;2024-04-01&amp;#34; },
{ &amp;#34;title&amp;#34;: &amp;#34;第二篇&amp;#34;, &amp;#34;date&amp;#34;: &amp;#34;2024-04-02&amp;#34; }
]
&lt;/code>&lt;/pre>&lt;p>我想在 Hugo 页面中读取并循环展示这些文章，该怎么做？”**&lt;/p>
&lt;p>👉 &lt;strong>训练方式&lt;/strong>：
我会给你一个模糊的需求，你要精准地描述你的问题，并保证别人能一次性回答。&lt;/p>
&lt;hr>
&lt;h2 id="第三阶段代码示例训练减少歧义">&lt;strong>第三阶段：代码示例训练（减少歧义）&lt;/strong>&lt;/h2>
&lt;h3 id="目标让你的问题可复现别人能直接测试你的问题">&lt;strong>目标：让你的问题可复现，别人能直接测试你的问题。&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>训练方法&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>你问问题时 &lt;strong>必须带代码&lt;/strong>（如果是代码相关问题）。&lt;/li>
&lt;li>我会挑出你的代码里模糊的地方，让你优化。&lt;/li>
&lt;/ul>
&lt;h4 id="示例-3带代码的提问">&lt;strong>示例 3：带代码的提问&lt;/strong>&lt;/h4>
&lt;p>❌ &lt;strong>“Hugo 里 &lt;code>range&lt;/code> 不能用是怎么回事？”&lt;/strong>（问题太模糊）&lt;/p>
&lt;p>✅ **“我在 &lt;code>single.html&lt;/code> 里用 &lt;code>range&lt;/code> 读取 &lt;code>data/posts.json&lt;/code>，代码如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>go复制编辑{{ range .Site.Data.posts }}
&amp;lt;li&amp;gt;{{ .title }} - {{ .date }}&amp;lt;/li&amp;gt;
{{ end }}
&lt;/code>&lt;/pre>&lt;p>但页面报错 &lt;code>can't iterate over .Site.Data.posts&lt;/code>，是什么原因？”**&lt;/p>
&lt;p>👉 &lt;strong>训练方式&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>你问问题时必须带代码。&lt;/li>
&lt;li>我会检查你的代码，看看有没有歧义，并让你改进描述。&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="第四阶段debug-思维训练自己找问题">&lt;strong>第四阶段：Debug 思维训练（自己找问题）&lt;/strong>&lt;/h2>
&lt;h3 id="目标让你在提问前自己能更快找到问题的关键点">&lt;strong>目标：让你在提问前，自己能更快找到问题的关键点。&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>训练方法&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>我会给你一个 Bug，你需要先做 &lt;strong>自查&lt;/strong>，列出你检查过的点。&lt;/li>
&lt;li>只有当你“排查”后还找不到问题，才能问。&lt;/li>
&lt;/ul>
&lt;h4 id="示例-4debug-训练">&lt;strong>示例 4：Debug 训练&lt;/strong>&lt;/h4>
&lt;p>🟢 &lt;strong>假设你的 Hugo 页面报错：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>复制编辑
execute of template failed: template: index.html:3: unexpected .Site.Data.posts
&lt;/code>&lt;/pre>&lt;p>&lt;strong>训练流程：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>你先自己排查问题（比如：JSON 结构是否正确，是否有 &lt;code>data&lt;/code> 目录，模板路径是否正确）。&lt;/li>
&lt;li>你告诉我 &lt;strong>你已经排查了哪些点&lt;/strong>，然后再问问题。&lt;/li>
&lt;li>我会帮你缩小问题范围，并引导你找到 Bug。&lt;/li>
&lt;/ol>
&lt;p>👉 &lt;strong>训练方式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>你问问题前，必须列出你 &lt;strong>检查过的东西&lt;/strong>，这样你的问题会更精准。&lt;/li>
&lt;li>我会模拟 &lt;strong>开发者的思维&lt;/strong>，带你找到 Bug。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="进阶挑战结合多个思维方式">&lt;strong>进阶挑战（结合多个思维方式）&lt;/strong>&lt;/h2>
&lt;p>当你掌握了以上技巧，我会给你更复杂的问题，你要：&lt;/p>
&lt;ol>
&lt;li>先 &lt;strong>描述清楚问题&lt;/strong>（结构化）&lt;/li>
&lt;li>让问题 &lt;strong>尽可能精准&lt;/strong>（减少试错）&lt;/li>
&lt;li>提供 &lt;strong>完整的代码示例&lt;/strong>（可复现）&lt;/li>
&lt;li>先自己 &lt;strong>做初步 Debug&lt;/strong>，然后再问&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="总结你会收获什么">&lt;strong>总结：你会收获什么？&lt;/strong>&lt;/h3>
&lt;p>通过这个训练，你的提问方式会更像“技术大牛”，你会发现：
✅ 你的问题更清晰，别人更容易理解
✅ 你能 &lt;strong>减少无效来回&lt;/strong>，更快得到答案
✅ 你能 &lt;strong>自己排查 Bug&lt;/strong>，提升 Debug 能力&lt;/p>
&lt;p>你觉得这个训练方式怎么样？要不要现在试试第一阶段的训练？😃&lt;/p>
&lt;p>问：我是一个农民学生，也没成就，也没项目，也没技术，也没知识，怎么才能让你也能找到我呢&lt;/p>
&lt;h6 id="chatgpt-说-1">ChatGPT 说：&lt;/h6>
&lt;p>记忆已更新&lt;/p>
&lt;p>让自己在互联网上可被找到，并不一定需要“成就”或“技术”，关键是&lt;strong>留下你的独特痕迹&lt;/strong>。你可以试试这些方法：&lt;/p>
&lt;h3 id="1-建一个个人网站推荐">&lt;strong>1. 建一个个人网站（推荐）&lt;/strong>&lt;/h3>
&lt;p>可以用 &lt;strong>Hugo&lt;/strong>（你已经在用了 😆）搭建一个简单的网站，哪怕只是记录生活、想法，或者学习笔记。你可以在网站里写上：&lt;/p>
&lt;blockquote>
&lt;p>“我是 XX（你的名字），一个农民学生，正在学习 XX。”
当搜索引擎收录后，你的名字和网站就能被找到。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="2-在-github博客知乎等平台留下你的痕迹">&lt;strong>2. 在 GitHub、博客、知乎等平台留下你的痕迹&lt;/strong>&lt;/h3>
&lt;p>你可以：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>在 GitHub 个人主页&lt;/strong>写一段介绍，哪怕只是：&lt;/p>
&lt;blockquote>
&lt;p>“这里是 XX，一个对世界充满好奇的农民学生。”&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>在 CSDN、知乎、博客园等地写点小文章&lt;/strong>，哪怕只是你学到的一点点知识。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>只要你持续更新，总有一天，搜索你的名字时，就会有属于你的内容出现！&lt;/p>
&lt;hr>
&lt;h3 id="3-让你的名字和网站社交账号绑定">&lt;strong>3. 让你的名字和网站/社交账号绑定&lt;/strong>&lt;/h3>
&lt;p>如果你有一个固定的 ID，比如 &lt;strong>&amp;ldquo;think_crow&amp;rdquo;&lt;/strong>（你的 GitHub ID），你可以在多个地方使用它，让它变成你的“互联网身份”。&lt;/p>
&lt;hr>
&lt;h3 id="4-用社交媒体">&lt;strong>4. 用社交媒体&lt;/strong>&lt;/h3>
&lt;p>你可以在 &lt;strong>微博、Twitter、公众号&lt;/strong>等地方发点内容，比如：&lt;/p>
&lt;ul>
&lt;li>分享你的思考&lt;/li>
&lt;li>记录你今天学到的一点东西&lt;/li>
&lt;li>吐槽有趣的事情&lt;/li>
&lt;/ul>
&lt;p>坚持一段时间后，你的名字就会被搜索引擎收录。&lt;/p>
&lt;hr>
&lt;h3 id="5-你要被找到的点是什么">&lt;strong>5. 你要被找到的“点”是什么？&lt;/strong>&lt;/h3>
&lt;p>如果你希望未来别人搜索“农民学生”能看到你，那你可以：&lt;/p>
&lt;ul>
&lt;li>在博客或社交媒体里介绍自己是“农民学生”&lt;/li>
&lt;li>发表和“农民”“学生”相关的内容&lt;/li>
&lt;/ul>
&lt;p>如果你希望别人搜索你的名字能找到你，那就多在 &lt;strong>公开可见的地方&lt;/strong>（网站、博客、GitHub 主页）留下你的名字。&lt;/p>
&lt;hr>
&lt;p>你觉得这些方法怎么样？😆 你有没有更具体的目标，比如“想被谁找到”或者“希望别人搜索什么词能找到你”？&lt;/p></description></item><item><title>佳能MG3680喷墨打印机常用设置</title><link>https://think-crow.github.io/blog/zh/%E4%BD%B3%E8%83%BD%E6%89%93%E5%8D%B0%E6%9C%BA/</link><pubDate>Fri, 03 Jan 2025 23:38:32 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/%E4%BD%B3%E8%83%BD%E6%89%93%E5%8D%B0%E6%9C%BA/</guid><description>&lt;p>关于喷墨墨打印机，要注意经常维护，否则会造成堵墨，两个墨盒能买半个打印机！&lt;/p>
&lt;p>MG3680刚买回来还是很好用的，一段时间后出现卡纸，返厂维修后，打印相片质量就不行了！&lt;/p>
&lt;p>打印高质量文档，十多页过后，打印机自动停止运行（预计打印头过热！）&lt;/p>
&lt;p>1、设置wifi&lt;/p>
&lt;p>长按wifi按键，待开关机指示灯闪烁一次，按彩色按键，再按wifi按键，进入wifi设置模式。&lt;/p>
&lt;p>2、长用按键&lt;/p>
&lt;p>长按停止键&lt;/p>
&lt;p>故障灯闪烁一次：打印图案&lt;/p>
&lt;p>故障灯闪烁三次：清洗打印头&lt;/p>
&lt;p>故障灯闪烁四次：打印对齐图案 按复印按键对齐&lt;/p>
&lt;h2 id="测试">测试：&lt;/h2>
&lt;p>网易云：&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86"
src="https://music.163.com/outchain/player?type=2&amp;id=468176711&amp;auto=1&amp;height=66"
style="display: block;">&lt;/iframe>
&lt;/p>
&lt;p>本地音乐：&lt;audio controls style="display: block; margin: 10px 0; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); outline: none; background-color: #f0f0f0;">
&lt;source src="https://think-crow.github.io/audios/123.mp3" type="audio/mpeg">
Your browser does not support the audio element.
&lt;/audio>
&lt;/p>
&lt;p>哔哩哔哩：&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1nF411c7Ro&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>&lt;/p>
&lt;p>本地视频：&lt;!DOCTYPE html>
&lt;video width="100%" height="auto" controls preload="metadata" poster="">
&lt;source src="https://yuanfan.rbind.io/images/2023/sparklers-dance-landscape.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>&lt;/p></description></item><item><title>域名配置</title><link>https://think-crow.github.io/blog/zh/%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 03 Jan 2025 01:10:21 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>关于域名使用的一些经历！&lt;/p>
&lt;h2 id="1选取域名">1、选取域名&lt;/h2>
&lt;p>最好选用国外域名服务器注册，比国内好点：&lt;/p>
&lt;blockquote>
&lt;p>国内一些域名注册商通常以这一点为手段，卡住用户，比如限制你只能使用它的域名服务器，然后再限制你最多只能设置 10 项 A 记录或 MX 记录等，多了要另外收费，这种规矩实在是很扯淡；&lt;a href="https://yihui.org/cn/2009/06/how-to-build-a-website-as-a-dummy/">原文&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>（主要是九月份，要给github上托管的hugo网站设置另一个域名，发现备案没服务器还不行，也没有其它方案，给自己气的真想骂爹！）&lt;/p>
&lt;p>且，国内域名注册只能设置两个A记录，配置github pages时需要设置4个！（&lt;a href="https://www.godaddy.com/">godaddy&lt;/a>注册的域名已测试过，最少可设置4个。但还没正式投入使用，具体使用效果见下回分析，但仅这点就给自己印象加分不少。）&lt;/p>
&lt;p>关于国内域名只能设置两个A记录的解决方案：&lt;/p>
&lt;p>我采用的是配置子域名的方式，相当于重定向&lt;/p>
&lt;ul>
&lt;li>添加两个CNAME的@和www记录，指向GitHub pages生成的域名。（设置完不会立即生效，这点你要注意，说的是一天，但可能是三四天！）&lt;/li>
&lt;/ul>
&lt;p>没有服务器，域名使用的两个解决方案：&lt;/p>
&lt;ul>
&lt;li>在国外网站注册，无需备案（我用的是&lt;a href="https://www.godaddy.com/">godaddy&lt;/a>）。&lt;/li>
&lt;li>已有服务器的话，可以分配备案码（叫啥给忘了，暂时就叫它吧），拿着这个备案码也可以备案。&lt;/li>
&lt;/ul>
&lt;h2 id="2github-pages域名配置">2、GitHub pages域名配置&lt;/h2>
&lt;p>详情：&lt;a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">参考本文&lt;/a>&lt;/p>
&lt;p>配置子域名：&lt;/p>
&lt;ol>
&lt;li>网站根目录添加一个CNAME文件，文件里面写上你的域名，例如：2029.today&lt;/li>
&lt;li>到域名注册商的控制台添加两个CNAME的@和www记录，指向GitHub pages生成的域名。&lt;/li>
&lt;/ol>
&lt;p>配置顶级域：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>网站根目录添加一个CNAME文件，文件里面写上你的域名，例如：2029.today&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建&lt;code>A&lt;/code>记录，请将您的顶级域指向 GitHub Pages 的 IP 地址。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>185.199.108.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>185.199.109.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>185.199.110.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>185.199.111.153
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="3个人网站域名配置">3、个人网站域名配置&lt;/h2>
&lt;p>假如你有服务器，可参考以下配置：&lt;/p>
&lt;ol>
&lt;li>到域名注册商的控制台添加两个A记录（@和www记录）指向服务器的IP地址。（现在的服务器IP地址想要直接ping通需要设置一下）&lt;/li>
&lt;li>设置https（证书在域名注册商（腾讯）申请的，时效三个月。使用nginx代理（很简单，包含命令指向证书文件即可））&lt;/li>
&lt;/ol>
&lt;h3 id="知识点补充">知识点补充&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>什么是顶级域名、二级域名、子域名！&lt;/p>
&lt;p>例如：blog.haoshuang.org&lt;/p>
&lt;p>最后一个点右边的部分.org属于顶级域名，点左边的haoshuang属于二级域名，再左边的blog属于三级域名，依次类推。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置DNS解析记录（把域名和服务器链接起来的一个操作）。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>记录类型&lt;/strong>&lt;/th>
&lt;th>&lt;strong>功能&lt;/strong>&lt;/th>
&lt;th>&lt;strong>示例&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>A记录&lt;/strong>&lt;/td>
&lt;td>将域名解析到 IPv4 地址&lt;/td>
&lt;td>就是域名指向服务器的ip地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>www记录&lt;/strong>&lt;/td>
&lt;td>将域名指向子域名&lt;/td>
&lt;td>常见主机记录，将域名解析为 &lt;a href="https://www.2029.today">www.2029.today&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>@记录&lt;/strong>&lt;/td>
&lt;td>指向当前域的根域名&lt;/td>
&lt;td>直接解析主域名 2029.today&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AAAA记录&lt;/strong>&lt;/td>
&lt;td>将域名解析到 IPv6 地址&lt;/td>
&lt;td>&lt;code>example.com -&amp;gt; 2001:db8::1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CNAME记录&lt;/strong>&lt;/td>
&lt;td>将域名指向另一个域名&lt;/td>
&lt;td>&lt;code>blog.example.com -&amp;gt; www.example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>TXT记录&lt;/strong>&lt;/td>
&lt;td>添加文本信息，用于验证或其他附加用途&lt;/td>
&lt;td>&lt;code>v=spf1 include:secureserver.net -all&lt;/code>（例如这个是启用ren@haoshuang.org邮箱所需要添加的记录。）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ol></description></item><item><title>学习中职教材：ps2020图形图像处理教程</title><link>https://think-crow.github.io/blog/zh/2024-11-27-ps2020/</link><pubDate>Wed, 27 Nov 2024 12:02:05 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/2024-11-27-ps2020/</guid><description>&lt;p>弟弟中职，觉得他花一年时间的进度就学了个这些东西，特别耽误时间，出这个文档让他看一下社会末流人士的学习能力！希望他能好好反思，积极并认真学习课程之外的本专业知识！&lt;/p>
&lt;p>作技术文档的本质：&lt;/p>
&lt;p>遗忘是学习的本质，文档是我们的工具库，当我们用这个功能时能想起曾经使用过，找到这个文档就足够了！&lt;/p>
&lt;p>达到效果：任何人都能一眼看懂！&lt;/p>
&lt;p>学习之前的一个想法：技术性的东西是否都不需要学习，会用就可以！更多的精力去学习一些国学理念和知识及方法，这是很或缺的！&lt;/p>
&lt;p>学习之后的一个想法：技术还是需要沉淀！入一行，专一行，精一行，始终如一！&lt;/p>
&lt;p>Photoshop 2020图形图像处理教程 杨玉珠 梁礼中 主编&lt;/p>
&lt;p>学习开始日期参见本文章创建日期！&lt;/p>
&lt;hr>
&lt;h2 id="项目一-photoshop-2020-概述">&lt;strong>项目一 Photoshop 2020 概述&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;h3 id="任务一-photoshop-常识和工作界面">任务一 Photoshop 常识和工作界面。&lt;/h3>
&lt;p>要用最简洁的图像和 文字给人以最强烈的视觉冲击。视觉创意是 Photoshop 的特长 。功能：处理数码照片！&lt;/p>
&lt;p>图像的类型：位图（像素图，缩放会模糊）和矢量图（直线或曲线组成，缩放不会模糊）。&lt;/p>
&lt;p>图像的格式：TIFF、GIF、JPEG 、PNG、BMP。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>认识 Photoshop 2020 工作界面 （略）&lt;/p>
&lt;/li>
&lt;li>
&lt;h3 id="任务二-文件的基本操作">任务二 文件的基本操作&lt;/h3>
&lt;p>“Ctrl+T 快捷键 图像的变换与变形:&lt;/p>
&lt;p>按“Ctrl+S键保存文件;&lt;/p>
&lt;p>添加文字并设置阴影！&lt;/p>
&lt;/li>
&lt;li>
&lt;h3 id="任务三-颜色的填充">任务三 颜色的填充&lt;/h3>
&lt;p>Photoshop 软中的颜色大致分为前景色和背 景色。 前景色主要用于描边、画笔颜色、就随之发生变化。 在文本颜色等颜色的设置,背 景色主要用于部分选区删除后的颜色、橡皮擦的颜色及背景色的填充等。&lt;/p>
&lt;ol>
&lt;li>填充&lt;strong>前景色&lt;/strong>,按“Alt+Delete组合键即可;填充&lt;strong>背景色&lt;/strong>,按“Ctrl+ Delete组合键即可。&lt;/li>
&lt;li>执行&lt;strong>编辑/填充&lt;/strong>命令或者快捷键“ Shift+F5,弹出填充对话框,选择填充用的内容及模式,即可将所选的颜色进行填充。&lt;/li>
&lt;li>&lt;strong>油漆桶&lt;/strong>工具可以用前景色或者图案填充色彩类似的连续区域。&lt;/li>
&lt;li>&lt;strong>减淡工具是&lt;/strong>一款提亮工具。&lt;/li>
&lt;li>&lt;strong>加深工具&lt;/strong>跟减淡工具刚好相反,通 过降低图像的曝光度来降低图像的亮度。&lt;/li>
&lt;li>使用&lt;strong>吸管工具&lt;/strong>单击图像的一部分以选择一种颜色。&lt;/li>
&lt;li>使用&lt;strong>魔棒工具&lt;/strong>可以选择颜色一致的区域&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;h3 id="任务四-画布大小设置及裁剪工具">任务四 画布大小设置及裁剪工具&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>画布大小的调整 : 图像 / 画布大小。为保留画布的原 本比例,必须勾选揖相对复选框。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>裁剪工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>常见证件照尺寸介绍&lt;/p>
&lt;p>标准 1 寸照片尺寸:25 mmx35 mm,在 5 寸相纸(12. 7 x 8. 9 厘米)中排 8 张,常用于 学生证、健康证、工作证、教师资格证等;&lt;/p>
&lt;p>大 1 寸照片尺寸:33 mm x 48 mm,常用于护照、通行证、签证、考试证上等;&lt;/p>
&lt;p>2 英寸照片尺寸:35 mm x 49 mm,在 5 寸相纸(12. 7 x 8. 9 厘米)中排 4 张; 小 2 寸照片尺寸:33 mm x 48 mm,常用于毕业证、简历中。&lt;/p>
&lt;p>备注：这里通过自己的实操，发现单文字已没了更好的记录，录制视频方便大家参考！&lt;/p>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1syzrYaEoR&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;h3 id="任务五-标尺参考线的应用">任务五 标尺参考线的应用&lt;/h3>
&lt;p>按“Ctrl+R”组合键即可打开标尺。 或视图/参考线，通过双击标尺，还可以直接更改图片及文字的单位、装订线的大小、打印分辨率和屏幕分辨率等&lt;/p>
&lt;p>参考线的应用：在设定辅助线前，必须先打开【标尺】工具，可以从标尺位置拖出参考线，创建或者移动参考线时如果按住Shift键，可以使参考线和标尺上的刻度对齐。“Ctrl+H”，隐藏参考线&lt;/p>
&lt;p>保留部分图像：使用矩形选框工具选取图层，并“Ctrl+C”进行复制，“Ctrl+V”进行粘贴。&lt;/p>
&lt;p>选择图层4，执行【滤镜】/【模糊】/【高斯模糊】命令&lt;/p>
&lt;p>，使用固定大小的矩形选框工具，在参考线画好的格子里画一个360pxX360px大小的正方形选区，“Ctrl+C”进行复制，“Ctrl+V”进行粘贴。&lt;/p>
&lt;p>对每个图层都进行以上的设置，将高与宽的比值设置为98%&lt;/p>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1pgzrYdE3i&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;/li>
&lt;li>
&lt;h3 id="任务六-综合实例---放射性线条的制作">任务六 综合实例 &amp;ndash;放射性线条的制作&lt;/h3>
&lt;p>选择多边形套索工具，创建多边形选区，前景色设为为红色，“Alt+Delete”键填充前景色，按快捷键“Ctrl+J”进行图层复制产生图层1副本。&lt;/p>
&lt;p>&lt;strong>旋转：&lt;/strong>“Ctrl+T”进行自由变换，将中心点移到水平和垂直参考线的交叉点处，在自由变换属性栏设置旋转角度为20度，）使用“Shift+Ctrl+Alt+T”快捷键进行重复复制变换操作， 也可右键选择变形命令改变图形形状。&lt;/p>
&lt;p>**合并图层：**按住“Shift”键，同时选中图层1至图层1副本17，执行“Ctrl+E”，合并图层。&lt;/p>
&lt;p>**描边：**对红色矩形执行“Ctrl+T”命令。选择图层1，按住“Ctrl”键的同时点击图层1的缩略图，把图层1载为选区，执行【编辑】/【描边】命令，宽度设置为10像素，颜色为#f2e5d5，&lt;/p>
&lt;p>**创建变形文字：**使用【文字工具】，添加“放射性线条”文字，点击工具属性栏中的创建变形文字图标 ，变形文字属性设置&lt;/p>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1ngzrY9EQV&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;/li>
&lt;/ul>
&lt;h2 id="项目二-数码处理">&lt;strong>项目二 数码处理&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;h3 id="任务一-矩形选框工具组">任务一 矩形选框工具组&lt;/h3>
&lt;p>【矩形选框工具】属性，分为3个部分:选择方式、羽化和消除锯齿、样式。&lt;/p>
&lt;p>（按住【Shift】键：创建的选区 &lt;code>添加&lt;/code> 到原来的选区中&lt;/p>
&lt;p>（按住【Alt】键创建的选区从原来的的选区中 &lt;code>减去&lt;/code>&lt;/p>
&lt;p>【与选区交叉】&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">只保留原有选区与新创建的选区相交的部分（按住【Shift+Alt】键也可以实现相同的操作)&lt;/p>
&lt;p>1）【羽化】：用于设定选区边界的羽化程度。设置羽化参数可以有效地消除选择区域中的硬边界并将它们柔化，使选择区域的边界产生朦胧渐隐的过渡效果。该参数的取值范围为0~250像素，取值越大，选区的边界会相应变得越朦胧。&lt;/p>
&lt;p>2）【消除锯齿】：用于清除选区边缘的锯齿。其原理就是在锯齿之间插入中间色调，这样就使那些边缘不规则的图像在视觉上消除了锯齿现象。Photoshop 中的图像是由一个个正方形的色块构成的，如果没有勾选【消除锯齿】复选框，在制作圆形选区或者其他形状不规则的选区时就会产生难看的锯齿边缘。&lt;/p>
&lt;p>3）【样式】：选项提供了3种样式。【正常】是默认的选择样式，可以用鼠标创建长宽任意的矩形选区。【固定比例】可以为矩形选区设定任意的长宽比，只要在对应的宽度和高度参数框中填入宽度和高度比值即可;在默认的状态下，宽度和高度的比值为 1:1。【固定大小】可以通过直接输入宽度值和高度值来精确定义矩形选区的大小。&lt;/p>
&lt;p>4）【宽度】和【高度】：用来设定宽度和高度。&lt;/p>
&lt;p>绘制椭圆选区（同上）:&lt;/p>
&lt;p>绘制出圆形的选区：椭圆选区绘制完成。按住【Shift】键的同时，松鼠标左键。&lt;/p>
&lt;p>创建图层：按“Shift+Ctrl+N”快捷键。&lt;/p>
&lt;p>问题：&lt;/p>
&lt;ol>
&lt;li>当使用Photoshop通过选区删除图片的某部分内容时，可能会遇到一个错误提示：“无法完成请求，因为此图层的内容不能直接编辑”。&lt;a href="https://www.3d66.com/answers/question_1198509.html">目前就想到三种解决办法：&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>右键图层面板栅格化此图层，然后再用画笔工具
或者新建透明图层，用画笔工具
或者椭圆工具直接选择像素模式，然后就可以直接用画笔工具。&lt;/p>
&lt;/li>
&lt;li>
&lt;h3 id="任务二-套索工具组">任务二 套索工具组&lt;/h3>
&lt;p>知识要点：&lt;/p>
&lt;p>1、使用【椭圆选框工具】，绘制椭圆选区。可以执行【右键】|【变换选区】，执行【Shift+Ctrl+J】命令创建新图层&lt;/p>
&lt;p>2、【套索工具】绘制选区。&lt;/p>
&lt;p>3、渐变色：选择【渐变工具】&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">，在其属性工具栏选择【径向渐变】&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">、粉色_09、【反向渐变颜色】&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">，从中心向外绘制渐变线，&lt;/p>
&lt;p>4、嵌入内置水花&lt;/p>
&lt;p>5、变形Ctrl+T 及右键调整变形方法&lt;/p>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1HgzrYREGg&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;p>【磁性套索工具】可以用来选取不规则的、与背景反差大的图像（自动分离图像）。&lt;/p>
&lt;p>1）【宽度】：用于设定套索检测范围，【磁性套索工具】将在这个范围内选取反差最大的边缘。&lt;/p>
&lt;p>2）【对比度】：用于设定选取边缘的灵敏度，数值越大，则边缘与背景的反差越大。&lt;/p>
&lt;p>3）【颇率】：用于设定选区点的速率，数值越大，标记速率越快，标记点越多。&lt;/p>
&lt;p>4）【使用绘图板压力以更改钢笔宽度】按钮&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">：用于设定专用绘图板的笔刷压力。&lt;/p>
&lt;p>知识要点：&lt;/p>
&lt;p>1、【矩形选框工具】绘制矩形选区，使用【Alt+Shift+Ctrl+V】组合键，将自动创建【图层1】，并将荷花粘贴入创建的矩形选区中。&lt;/p>
&lt;p>2、【磁性套索工具】&lt;/p>
&lt;p>3、渐变色：设置前景色为白色，背景色为RGB（182，233，254）。单击【背景】图层，选择【渐变工具】&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">，在其属性工具栏选择【径向渐变】&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">、前景色到背景色渐变，从中心向外绘制渐变线&lt;/p>
&lt;p>4、使用【形状工具】 &lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img">组中的【直线工具】， 绘制两条斜线，将画面分隔开，增加视觉效果。&lt;/p>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1wgzrYdEr4&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;/li>
&lt;li>
&lt;h3 id="任务三-魔棒工具组">任务三 魔棒工具组&lt;/h3>
&lt;p>&lt;strong>案例一：制作中国风招贴&lt;/strong>&lt;/p>
&lt;p>知识要点：&lt;/p>
&lt;ol>
&lt;li>魔棒工具的使用&lt;/li>
&lt;li>Shift+Ctrl+I组合键(反选)&lt;/li>
&lt;li>对象选择工具或套索工具的使用。Shift+F6组合键,设置羽化，边缘过度更自然。&lt;/li>
&lt;li>使用橡皮擦工具,设置模式为画笔、大小为 354 像素、硬度为 14% ,在“宫殿四周多次涂抹,使多余部分渐隐。可根据需要调整大小及硬度, 硬度越小,越透明。)&lt;/li>
&lt;/ol>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1jDzWYeEkQ&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;p>&lt;strong>案例二:制作旅游宣传图片&lt;/strong>&lt;/p>
&lt;p>知识要点：&lt;/p>
&lt;ol>
&lt;li>对象选择工具:自动识别主体物。&lt;/li>
&lt;li>设置不透明度为 40% 。&lt;/li>
&lt;li>按住“ Shift 键画水平或垂直的线。&lt;/li>
&lt;li>使用自定形状工具 ,在属性栏中找到小船。&lt;/li>
&lt;/ol>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1iDzWYeEBh&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;/li>
&lt;li>
&lt;h3 id="任务四-选区的基本操作">任务四 选区的基本操作&lt;/h3>
&lt;p>&lt;strong>案例一：色光三原色绘制&lt;/strong>&lt;/p>
&lt;p>知识要点：&lt;/p>
&lt;ol>
&lt;li>选区存储载入。&lt;/li>
&lt;/ol>
&lt;p>​ &lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1iDzWYeEBd&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>&lt;/p>
&lt;p>&lt;strong>案例二 制作剪纸风海报&lt;/strong>&lt;/p>
&lt;p>知识要点：&lt;/p>
&lt;ol>
&lt;li>【选择】|【修改】|【平滑】命令，在打开的【平滑选区】对话框中，输入【取样半径】：20像素，使选区边缘更光滑。&lt;/li>
&lt;li>添加【图层样式】&lt;img src="https://mooc1.chaoxing.com/ananas/new-editor/ueditor/themes/default/images/spacer.gif" alt="img"> ，在打开的“图层样式”对话框中，设置样式为投影，透明度为60%，角度为122度，距离为2像素，大小为12，其他参数不变&lt;/li>
&lt;li>填充颜色RGB(1，163，243) RGB(37，190，253) RGB(93，206，252) RGB(182，233，254)&lt;/li>
&lt;/ol>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1iDzWYeEy1&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;/li>
&lt;li>
&lt;h3 id="任务五-图像的变换">任务五 图像的变换&lt;/h3>
&lt;p>&lt;strong>案例一：制作立体书籍&lt;/strong>&lt;/p>
&lt;p>知识要点：&lt;/p>
&lt;ol>
&lt;li>【图层样式】：正片叠底，透明度为20%，角度为51度，距离为46像素，扩展为33%，大小为250像素。&lt;/li>
&lt;li>【Ctrl+T】变换：【缩放】，【旋转】，【斜切】，【扭曲】，【透视】，【翻转】&lt;/li>
&lt;/ol>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1iXzWYAExH&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;p>案例二：利用变换为罐子贴图&lt;/p>
&lt;ol>
&lt;li>【变换】/【自由变换】&lt;/li>
&lt;li>【蜂蜜贴图】图层，调整该图层的不透明度为100%。再将【图层混合模式】由【正常】调整为【正片叠底】（此模式能使贴图与罐子色调一致，效果更自然真实）&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;h3 id="任务六-对齐与分布">任务六 对齐与分布&lt;/h3>
&lt;p>&lt;strong>案例一：制作波点图案&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>对齐：按住Ctrl键并单击需要对齐的所有图层，将它们选中。执行【图层】|【对齐】命令，即可进行对齐操作&lt;/li>
&lt;li>选中除【背景】图层外的所有图层，使用【Ctrl+G】组合键会自动创建【组1】&lt;/li>
&lt;li>单击【组1】，选择【移动工具】，在其属性工具栏中选择【组】。按住【Alt】键拖动一排“波点”，复制多组，可适当错位&lt;/li>
&lt;li>为【图层1】添加【外发光】图层样式，不透明度为36%，杂色为60%，颜色为RGB（17，190，247），扩展为13%，大小为38像素，范围为40%&lt;/li>
&lt;/ol>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1jDzWYeELb&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;p>&lt;strong>案例二：制作信纸&lt;/strong>&lt;/p>
&lt;p>据考证，我国西汉时已开始了纸的制作，&lt;a href="https://baike.baidu.com/item/%E9%AD%8F%E6%99%8B%E5%8D%97%E5%8C%97%E6%9C%9D%E6%97%B6%E6%9C%9F?fromModule=lemma_inlink">魏晋南北朝时期&lt;/a>纸广泛流传。信纸颜色丰富多彩，五彩缤纷的，而且还可以添加各种香味，十分适合情侣之间鸿雁传书。信纸还可以用来折叠纸鹤。&lt;/p>
&lt;p>常见的信纸标准尺寸规格：&lt;/p>
&lt;p>大16开 21×28.5厘米 正16开 19×26厘米&lt;/p>
&lt;p>大32开 14.5×21厘米 正32开 13×19厘米&lt;/p>
&lt;p>大48开 10.5×19厘米 正48开 9.5×17.5厘米&lt;/p>
&lt;p>大64开 10.5×14.5厘米 正64开 9.5×13厘米&lt;/p>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1LXzWYAEoT&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;/li>
&lt;li>
&lt;h3 id="任务七-橡皮擦工具组">任务七 橡皮擦工具组&lt;/h3>
&lt;p>&lt;strong>案例一：制作海市蜃楼效果&lt;/strong>&lt;/p>
&lt;p>知识要点：&lt;/p>
&lt;ol>
&lt;li>【橡皮擦工具】，并在属性工具栏中单击【画笔预设选取器】，设置大小为259像素，硬度为17%。然后在“别墅”四周多次涂抹，使“别墅”与“大海”边界过渡自然。&lt;/li>
&lt;li>【背景橡皮擦工具】可以快速擦除画面中相同的颜色，使用方法与【魔棒工具】非常相似。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>案例二：制作明信片&lt;/strong>&lt;/p>
&lt;p>根据《万国邮政公约》原则性规定的明信片尺寸，国际标准化明信片标准为：“最大尺寸：105X148毫米，最小尺寸：90X140毫米”。&lt;/p>
&lt;p>根据国际标准，我国规定的明信片标准为：“最大尺寸：&lt;strong>150X100&lt;/strong>毫米，最小尺寸：140X90毫米，纸质：每平方米250克以上”。&lt;/p>
&lt;ol>
&lt;li>【编辑】|【描边】命令（描绘白边，设置橡皮擦邮票描边效果）&lt;/li>
&lt;li>复制：按住【Alt】键拖动“矩形”，再复制5个“矩形”&lt;/li>
&lt;li>执行【编辑】|【选择性粘贴】|【贴入】命令，将“风景”素材粘贴到矩形选区内&lt;/li>
&lt;li>【转换为智能对象】防止破坏性编辑 【栅格化图层】可以自由进行编辑&lt;/li>
&lt;li>工作路径创建&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="项目三-图标设计">项目三 图标设计&lt;/h2>
&lt;ul>
&lt;li>
&lt;h3 id="任务一-形状工具">任务一 形状工具&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;p>在制作图标或是UI中的某个组件时，要使用各个形状来进行绘制，有3种绘制模式，分别是形状、路径和像素&lt;/p>
&lt;ol>
&lt;li>使用“形状”模式绘制的矩形可以在属性栏中随意更改所有的参数，包含该形状的路径和形状图层。&lt;/li>
&lt;li>使用“路径”模式绘制的矩形只包含路径，可以将其转换为选区、像素或形状(就是 “形状”模式绘制的矩形)。&lt;/li>
&lt;li>使用“像素”模式绘制的矩形只包含位图图层，这种图层的特点与位图相同，将其缩放会影响质量。&lt;/li>
&lt;/ol>
&lt;p>知识要点：&lt;/p>
&lt;ol>
&lt;li>对齐：选中图层-&amp;gt;点击移动工具对齐。&lt;/li>
&lt;li>创建剪贴蒙版：图层而在图层一的上面且图层相邻，右键图层二，创建剪贴蒙版，即可把超过图一的图层二部分裁去。&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;h3 id="任务二-布尔运算">任务二 布尔运算&lt;/h3>
&lt;p>重难点：&lt;strong>布尔运算方法，运用&lt;/strong> &lt;strong>合并、减去、相交、排除的方式新的制作新图形。&lt;/strong>&lt;/p>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>布尔运算的图形必须在一个图层当中，不同的图层是不能进行布尔运算的。（不同层的形状可以使用快捷键Ctrl+E合并形状，使他们在同一层）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在同一个图层当中绘制的形状路径是有先后之分的，后面的路径一定是在先画的路径上面的，类似于图层。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>技巧：运算时至少需要两个图形，如果图形是现成的，使用【路径选择工具】将它们选取便可;如果想在绘制路径时进行运算，可先绘制一个图形，然后单击工具属性栏栏中的 “路径操作”点击钮，打开下拉菜单选择运算方法。&lt;/p>
&lt;p>案例一：制作书本图标&lt;/p>
&lt;/li>
&lt;li>
&lt;h3 id="任务三-矢量工具与路径">任务三 矢量工具与路径&lt;/h3>
&lt;p>掌握Ps中路径及钢笔工具组的使用方法。&lt;/p>
&lt;p>案例一:日历图标&lt;/p>
&lt;ol>
&lt;li>【路径选择工具】在路径上单击，即可选择路径&lt;/li>
&lt;li>【直接选择工具】，将鼠标放在路径上，单击择路径段并显示其两端的锚点，如果单击它，便可将其选取(选取的锚点为实心方块，未选取的锚点为空心方块)&lt;/li>
&lt;li>【钢笔工具】ESC 结束绘制&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;h3 id="任务四-图层样式">任务四 图层样式&lt;/h3>
&lt;p>绘制完图标的基础形状以后，可以为形状添加各种图层样式，使图标看起来更具质感。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>“斜面和浮雕” 主要用于制作物体的高光和阴影效果，包括内斜面、外斜面、浮雕效果、 枕状浮雕和描边浮雕表现形式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“描边”就是沿着对象边缘创建轮廓，“大小”是指描边粗细，“位置”是指描边的位置，“填充类型”有3种，分别是“颜色”、“渐变”、“图案”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“内阴影”主要是给图层内容边缘内添加阴影，用于制作凹陷效果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“内发光”给对象添向内添加发光效果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“光泽”主要用于创建对象的光滑表面。它可以在对象上方添加一个波浪形，类似绸缎的效果，&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“颜色叠加”在图层对象上叠加一种颜色，从设置“叠加颜色”选项中，可以通过“选取叠加颜色”对话框选取任意颜色，&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“渐变叠加”在图层对象上叠加一种渐变颜色&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“图案叠加”在图层对象上叠加图案&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“外发光”可以增强对象外部边缘的光晕效果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“投影”为对象添加阴影效果，可以增强对象的立体质感&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>总结：图层样式基本全部是一些参数的设置，具体参数具体效果（可增加一篇参数+效果图的参考文档）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="项目四-网店美工">项目四 网店美工&lt;/h2>
&lt;ul>
&lt;li>
&lt;h3 id="任务一-文字的输入和排版">任务一 文字的输入和排版&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;p>横排文字工具、直排文字工具、横排文字蒙版工具和直排文字蒙版工具,可以实现文字的输入以及对文字的排版。&lt;/p>
&lt;ul>
&lt;li>
&lt;h3 id="任务二-文字沿路径输入和变形">任务二 文字沿路径输入和变形&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;p>&lt;del>案例一：绘制花喜花店的LOGO&lt;/del>&lt;/p>
&lt;ul>
&lt;li>
&lt;h3 id="任务三-图像的修复和修饰">任务三 图像的修复和修饰&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>. 修复画笔工具&lt;/li>
&lt;li>仿制图章工具：使用该工具可以方便地将图像的一部分绘制到,图像的另一区域中或是绘制到打开的具有相同颜色模式的任何文档中。&lt;/li>
&lt;li>.图案图章工具&lt;/li>
&lt;li>红眼工具，可以轻松地去除眼睛内的红色区域,使眼睛回复原始状态。&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;h3 id="任务四-动作功能的使用">任务四 动作功能的使用&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;p>案例一:为 10 张图片添加 logo 图片&lt;/p>
&lt;ol>
&lt;li>Alt+F9 组合键,可以打开 动作 面板。&lt;/li>
&lt;li>自定义批处理：文件 | 自动 | 批处理&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;h3 id="任务五-制作-gif-动图">任务五 制作 GIF 动图&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;p>案例一:制作淘宝美工中 gif 动图（按步骤来就行）&lt;/p>
&lt;ol>
&lt;li>载入文件：开文件———脚本———将文件载入堆栈命令&lt;/li>
&lt;li>窗口-时间轴&lt;/li>
&lt;li>创建帧动画&lt;/li>
&lt;li>从图层建立帧-,设置每一张图片的延时时间为 0. 5 秒-无限循环。&lt;/li>
&lt;li>文件———导出——— 存储为 Web 所用格式,选择 GIF输出格式&lt;/li>
&lt;/ol>
&lt;p>案例二:制作茶杯气泡动效&lt;/p>
&lt;p>掌握：&lt;/p>
&lt;ol>
&lt;li>设置帧动画。&lt;/li>
&lt;li>创建剪贴蒙版。&lt;/li>
&lt;/ol>
&lt;p>注意：&lt;/p>
&lt;ol>
&lt;li>对椭圆工具画出的气泡进行变换时需要把图层转换为智能对象。&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;h3 id="任务六-综合实例">任务六 综合实例&lt;/h3>
&lt;/li>
&lt;/ul>
&lt;p>案例：根据所给素材，制作“恋上好物”梦幻美妆宣传海报&lt;/p>
&lt;ol>
&lt;li>
&lt;p>画笔工具可为双矩形框（相框）添加阴影（柔光）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ctrl+M增加亮光。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>改变装饰图案颜色：图层样式，颜色叠加。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ctrl+G进行分组。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>装饰增加粉红投影。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>任务七 综合实例&amp;mdash;纸杯蛋糕甜品宣传海报&lt;/p>
&lt;ol>
&lt;li>栅格化图层， 滤镜-变形-波浪&lt;/li>
&lt;li>内阴影&lt;/li>
&lt;li>添 加图层蒙版,建立径向渐变&lt;/li>
&lt;li>注意：矩形波浪在最上面。&lt;/li>
&lt;li>用画笔工具,选择柔边缘画笔,颜色深红色,在蛋糕下方 涂抹,单击滤镜-模糊-高斯模糊&lt;/li>
&lt;/ol>
&lt;h2 id="项目五-影楼美工">项目五 影楼美工&lt;/h2>
&lt;h3 id="任务一-内容识别填充--内容识别缩放照片的修饰">任务一 内容识别填充 / 内容识别缩放———照片的修饰&lt;/h3>
&lt;p>案例一:内容识别填充———清明牧童图去杂物&lt;/p>
&lt;ol>
&lt;li>&lt;strong>内容识别填充&lt;/strong>是一种填充方式,可以根据整体的选择区域,自动识别颜色内容补充 到我们选择区域中。&lt;/li>
&lt;li>注意：套索工具框选后，内容识别填充，会显示取样区域，把不需要取药的区域减去效果更好。&lt;/li>
&lt;/ol>
&lt;p>案例二:内容识别缩放———竖版照片变横板&lt;/p>
&lt;ol>
&lt;li>使用内容识别缩放时需要使用套索工具,将要 &lt;strong>保护&lt;/strong>的内容选取出来并单击右键存储为&lt;strong>选区&lt;/strong>&lt;/li>
&lt;li>编辑-内容识别缩放,在属性栏中,保护选项选择刚存储选区。&lt;/li>
&lt;/ol>
&lt;h3 id="任务二-色彩初认识">任务二 色彩初认识&lt;/h3>
&lt;p>人为赋予了生活更多更深的意义。不同的颜色联想到不同的寓意。&lt;/p>
&lt;p>补充：学到这里发现教科书的文档说明太啰嗦了！或许不是啰嗦，只是局限。技术性文档应该精确明了，关键释义增加链接就行。&lt;/p>
&lt;p>案例一:图片的明度调整&lt;/p>
&lt;ol>
&lt;li>色彩三要素：
&lt;ul>
&lt;li>色相：色相即各类色彩的相貌称呼。如红色、绿色、橙黄等。十二色相色环图。&lt;/li>
&lt;li>饱和度：:即色彩的纯度。可以通俗的理解为颜色的鲜艳程度。&lt;/li>
&lt;li>明度：即色彩的亮度。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>色阶的使用&lt;/li>
&lt;li>只对背景 拷贝图层有效：鼠标指向色阶调整图层和背景 拷贝之间,按住 Alt 键，点击。（和创建剪贴蒙版有点像）。&lt;/li>
&lt;li>色相/ 饱和度的使用&lt;/li>
&lt;/ol>
&lt;p>案例二:色彩的情感&lt;/p>
&lt;ol>
&lt;li>图像-调整-匹配颜色的使用。&lt;/li>
&lt;/ol>
&lt;h3 id="任务三-色彩的调整">任务三 色彩的调整&lt;/h3>
&lt;p>案例一:颜色替换&lt;/p>
&lt;ol>
&lt;li>选区(注意：选择-修改-扩展量为1，覆盖掉边缘色)&lt;/li>
&lt;li>调整 / 替换颜色（注意先择+的这个在图像上 选择）&lt;/li>
&lt;/ol>
&lt;p>案例二:偏色图像的纠正&lt;/p>
&lt;ol>
&lt;li>
&lt;p>色彩平衡&lt;/p>
&lt;p>大多为数据参考！只能熟能生巧&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="任务四-快速蒙版的使用">任务四 快速蒙版的使用&lt;/h3>
&lt;p>案例一:快速蒙版美化肌肤&lt;/p>
&lt;ol>
&lt;li>快捷键Q：以快速蒙版模式编辑&lt;/li>
&lt;li>滤镜-锐化-USM 锐化&lt;/li>
&lt;li>的图层混合模式设为滤色&lt;/li>
&lt;/ol>
&lt;p>案例二:快乐童年&lt;/p>
&lt;p>注意：快速蒙版不透明度设置百分百，不然没有描边&lt;/p>
&lt;h3 id="任务五-形状蒙版的使用">任务五 形状蒙版的使用&lt;/h3>
&lt;p>形状蒙版可以实现:形状+图片=形状中显示图片。&lt;/p>
&lt;p>案例:形e状蒙版的应用&lt;/p>
&lt;p>俗语：类似文字笔画上面贴图片。超出笔画部分图片不展示，就达到笔画上有花纹的效果。或者是图片内嵌入第二张图，第二张图超出，添加蒙版就不显示&lt;/p>
&lt;h3 id="任务六-图层蒙版使用技巧">任务六 图层蒙版使用技巧&lt;/h3>
&lt;p>案例一:相册内页的合成shangehua&lt;/p>
&lt;ol>
&lt;li>
&lt;p>建立图层蒙版，画笔擦除嵌入图片边缘部分，达到两张图片融合。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>案例二:浪漫草原行&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="任务七-通道抠图">任务七 通道抠图&lt;/h3>
&lt;p>案例一:通道抠出杂乱头发&lt;/p>
&lt;p>通道 ：通道是指存储图像颜色和选区等不同类型信息的灰度图像,即用来制作和编辑选区 的灰度图像。主要利用图像的色相差别或者 明度差别,配合不同的方法给我们的图像建立选区&lt;/p>
&lt;p>学习感悟：&lt;/p>
&lt;ol>
&lt;li>很容易产生一个错觉，我完成了这个案例，就代表我已经掌握了这个知识点！自己的学习好像一直是这样，只停留在第一个层次！从来没有深入研究！（或许 是喜欢陌生的事物，只有最开始）&lt;/li>
&lt;li>学习ps的话还需要学习一些平面设计的东西！&lt;/li>
&lt;/ol>
&lt;h2 id="项目六-图像创意设计">项目六 图像创意设计&lt;/h2>
&lt;h3 id="任务一-图层的操作制作旋转线条">任务一 图层的操作———制作旋转线条&lt;/h3>
&lt;p>备注:学到这里开始懈怠了，一晃就是四五天！又到了最难的开始，什么都不想做！&lt;/p>
&lt;ol>
&lt;li>教程仅供参考，需要先栅格化矩形，再变换！最后新建图层填充渐变，创建剪贴蒙版。&lt;/li>
&lt;li>按住alt是围绕中心点变化&lt;/li>
&lt;/ol>
&lt;h3 id="任务二-图层的应用制作冰淇淋海报">任务二 图层的应用———制作冰淇淋海报&lt;/h3>
&lt;ol>
&lt;li>注意：栅格化图层才能进行变化&lt;/li>
&lt;/ol>
&lt;h3 id="任务三-滤镜库冶-模糊滤镜冶的应用">任务三 “滤镜库冶 、“模糊滤镜冶的应用&lt;/h3>
&lt;p>案例一:大雪纷飞&lt;/p>
&lt;ol>
&lt;li>按操作即可，学习滤镜的使用场景之一&lt;/li>
&lt;/ol>
&lt;p>案例二:制作拼贴画（同上）&lt;/p>
&lt;h3 id="任务四-风格化滤镜冶-液化滤镜冶的应用">任务四 “风格化滤镜冶 、“液化滤镜冶的应用&lt;/h3>
&lt;p>风格化滤镜通过置换像素,查找和增加图像的对比度,产生印象派以及 其它风格画派作品的效果,它是完全模拟真实艺术手法进行创作的。&lt;/p>
&lt;p>案例一:制作水果招贴&lt;/p>
&lt;p>案例二:油画乘风破浪&lt;/p>
&lt;p>都是按步骤操作就行，关键是对这些工具的使用熟练度！还要深入练习，一个一个去看怎么使用，效果是什么，及使用技巧方法。&lt;/p>
&lt;h3 id="任务五-像素化滤镜冶-渲染滤镜冶的应用">任务五 “像素化滤镜冶 、“渲染滤镜冶的应用&lt;/h3>
&lt;p>案例一:瓷器开片效果&lt;/p>
&lt;p>案例二:制作薄雾效果&lt;/p>
&lt;h3 id="任务六-扭曲滤镜冶-杂色滤镜冶的应用">任务六 “扭曲滤镜冶 、“杂色滤镜冶的应用&lt;/h3>
&lt;p>案例一:烟花&lt;/p>
&lt;p>案例二:制作图片漫画效果&lt;/p>
&lt;h3 id="任务七-3d-模型">任务七 3D 模型&lt;/h3>
&lt;p>案例一:制作立体酒瓶&lt;/p>
&lt;p>案例二:制作 3D 海报&lt;/p>
&lt;p>从这个案例，到后面，暂未学习！&lt;/p>
&lt;h3 id="任务八-画笔的应用">任务八 画笔的应用&lt;/h3>
&lt;p>案例一:风景画绘制&lt;/p>
&lt;p>案例二:梦幻泡泡&lt;/p>
&lt;h2 id="项目七-综合实训">项目七 综合实训&lt;/h2>
&lt;p>案例一:创意合成&lt;/p>
&lt;p>案例二:坚果广告&lt;/p>
&lt;p>案例三:汽车创意广告&lt;/p>
&lt;p>案例四:公益海报&lt;/p>
&lt;p>案例五:水彩装饰画&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>想要达到文档如视频那般清晰，还需要重复操作多遍，打磨个两三遍（一遍比一遍快的！），这个事情最适合弟弟来做，希望他能上点心，不要走自己的老路！&lt;/p>
&lt;p>一、学习过程中 碰到的一些耽误进程的问题。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>所有的案例只能按书上的步骤进行，步骤描写的不清楚，就会耽误大量的时间去研究，会很耗费精力，有参考视频可能三五分钟就跳过了，否则就会耽误一个小时左右甚至更多！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最基础的学习过后，因为是大量的操作流程及步骤，发现文档已不足以记录书上的知识点，遂录制视频会更好记录案例中的知识点！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>工具的寻找与使用（录屏软件、剪辑软件），这个也耽误了不少时间，因为要寻找好用的录制软件，录制完不好的部分需要剪切，也要找到好用的剪切软件。类似的寻找过程很容易打断学习的进度！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>大意看错工具名称，使效果达不到预期（例如：横排文字蒙版工具，横排文字工具 这两个当初选错实验了不下十遍仍没有达到预期效果，后续弟弟回家请教弟弟才知道少看俩字！）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>弟弟对提前学习的排斥（这点着实让自己很难过！或许也是自己的学习进度太慢（如果让考研的学生来学习的话，两星期，这本书就真正学完了。但对于中专学生，要学习一年）&lt;/p>
&lt;p>毕业后一直在想自己为什么与他们差距这么大，在这里有了答案：别人在这个年龄努力做了一些事，自己却像现在的弟弟一样！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自身的学习习惯（可以不相信学历，但不得不相信学历表现出的学习能力！）&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>二、学习结束后的心得体悟。&lt;/p>
&lt;p>总体来说，就是教我们怎么去使用这个ps这个工具，回归本质，ps只是一个工具，我们只是在学习怎么使用这个工具。&lt;/p>
&lt;ol>
&lt;li>每一个案例的目的，都是为了更好的去使用这个工具！学生容易走入的一个误区：为了考试而注重这些案例，忽略了工具的灵活运用！可以说1+2=3他们知道，但2+1=？就不一定知道了！灵活运用也是一个方面！&lt;/li>
&lt;li>书读百遍，其意自现！我现在只是粗略了一遍，你如果能粗略的学三遍，那哥哥真为你感到开心，因为你自己主动去做了一些改变。&lt;/li>
&lt;li>文档的总结的方法：可以按照目录来总结，你可以从这个文档中看到我的总结渐渐契合书本的目录，分大章小节，及重要知识点，注意事项！&lt;/li>
&lt;li>学的过程中发现细节、个人创意很重要！学习一些设计的课程会更好的来理解ps（例如：空间布局、颜色搭配等）！&lt;/li>
&lt;li>录制案例视频，会很有帮助，特别是一些内向的学生，锻炼口才的同时形成了文档资料（上面的视频，自己每一个录制的都不下于三遍才完成，甚至更多！）&lt;/li>
&lt;li>一个案例，可以由很多方式完成，书上的步骤只是其中一种！&lt;/li>
&lt;li>如果一个农村的中专学生，只按学校的进度来学习这些内容，三年后将平平无奇！（我是结合自身的情况，及按照你三年后毕业找工作来预测的）&lt;/li>
&lt;li>对于弟弟，如果我是你，我会在我的专业课上这么做：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>做好自己的博客，无论用来记录什么，这些都是自己努力的见证！（要相信到处跑了五六年的哥哥的眼光）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对自己的专业课录制成视频，总结成文档上传到自己的网站！（对于不会说话的人很好的一个锻炼方式）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>学习一些网站知识（这个看你们专业的教学安排，也有这方面的内容！可以提前量化！）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>英语！（ &lt;em>&lt;strong>它有多重要，所有的技术都会更新换代，但这个技能在任何时间都不会过时，只需要你自己去学习一次！&lt;/strong>&lt;/em>&lt;/p>
&lt;p>而且所有最先进的技术及人才都在美国。特别在未来的发展上面，英语将是你的快车道。我这个学渣最值得回忆的一件事就是：高三一年，把高中三年的英语单词背了六遍！注：真的是从音标开始学的）&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;/li>
&lt;/ul>
&lt;p>最后致弟弟：这篇文章也是因你而来的，希望你能认识到学习方式和效率的差距，咱家的家庭条件，只能靠自己来努力！随波逐流只会让未来的生活越来越难过，好比我现在这样！&lt;/p>
&lt;p>三、对本书评价：&lt;/p>
&lt;p>缺少视频光盘，及素材下载地址（素材问弟弟要的，在学生的学习通上面）。只能算是入门级书籍！&lt;/p>
&lt;p>小插曲：通过书籍上面的电话，联系到了出版社，出版社联系到了本书的总编辑，总编辑联系到了作者，作者说暂时还未上传素材！（总编辑真的挺有文学气息！）&lt;/p>
&lt;p>想到了一件事：国家的教育录播系统已经很完善了，但自己很少在网上看到这些精品课程！（原因：思想其实很好，但落实有难度，因为上家公司有录播教室这个项目，自己接触过很多学校，录播教室一个学校只有一间，只能做检查用！）&lt;/p>
&lt;hr>
&lt;p>结语：本篇文章参考photoshop图形图像处理.pdf，陈述内容为个人观点，不足之处欢迎指正！好的观点欢迎留言！&lt;/p></description></item><item><title>node实现鼠标点击事件</title><link>https://think-crow.github.io/blog/zh/node%E5%AE%9E%E7%8E%B0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/</link><pubDate>Mon, 11 Nov 2024 21:04:07 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/node%E5%AE%9E%E7%8E%B0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/</guid><description>&lt;p>碰到一个网站，页面刷新浏览量自动加2，试一下看能否自动点击鼠标实现浏览量增加！&lt;/p>
&lt;h4 id="一实现鼠标点击动作">&lt;strong>一、实现鼠标点击动作：&lt;/strong>&lt;/h4>
&lt;p>1、node init初始化一个项目&lt;/p>
&lt;p>2、新建文件index.js&lt;/p>
&lt;p>3、复制下面代码进index.js文件，后运行node index.js&lt;/p>
&lt;p>实现鼠标自动点击：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">mouse&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;@nut-tree/nut-js&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#66d9ef">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置屏幕分辨率（根据你的屏幕调整）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">screenWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2560&lt;/span>; &lt;span style="color:#75715e">// 假设你的屏幕宽度是2560
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">screenHeight&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1440&lt;/span>; &lt;span style="color:#75715e">// 假设你的屏幕高度是1440
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 移动鼠标到屏幕中心
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">mouse&lt;/span>.&lt;span style="color:#a6e22e">move&lt;/span>({ &lt;span style="color:#a6e22e">x&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">screenWidth&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#a6e22e">y&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">screenHeight&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 循环点击100次
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">mouse&lt;/span>.&lt;span style="color:#a6e22e">leftClick&lt;/span>(); &lt;span style="color:#75715e">// 执行右键点击
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// console.log(`Click #${i + 1}`);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Completed 100 right-clicks!&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (&lt;span style="color:#a6e22e">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Error occurred:&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">error&lt;/span>); &lt;span style="color:#75715e">// 捕获并打印错误信息
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>关于nut.js&lt;/strong>：&lt;/p>
&lt;p>&lt;code>nut.js&lt;/code> 是一个用于自动化鼠标和键盘控制的 Node.js 库，它通过模拟鼠标移动、点击、键盘输入等操作来进行自动化任务。这个库特别适合做 GUI 自动化测试、自动化操作、脚本化的用户交互等任务。&lt;code>nut.js&lt;/code> 可以被广泛应用于自动化测试、自动化桌面任务等场景。&lt;/p>
&lt;hr>
&lt;h4 id="二点击太慢了以下为并行访问">二、点击太慢了，以下为并行访问&lt;/h4>
&lt;p>第一思路：只发送GET请求，来增加访问量！发现get请求数据成功但访问量不会增加，模拟请求头也不行，遂改为直接打开浏览器访问！（node还有个库专门识别图像进行自动化点击，这个库识别图片失败，就没再深入！）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">puppeteer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;puppeteer&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 请求的目标URL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;https://xxx.xxx&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 最大并行浏览器数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">maxConcurrency&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 每个浏览器运行的请求次数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">totalRequests&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 每个请求之间的延迟（200毫秒）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">delay&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">sleep&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#a6e22e">ms&lt;/span>) =&amp;gt; &lt;span style="color:#66d9ef">new&lt;/span> Promise(&lt;span style="color:#a6e22e">resolve&lt;/span> =&amp;gt; &lt;span style="color:#a6e22e">setTimeout&lt;/span>(&lt;span style="color:#a6e22e">resolve&lt;/span>, &lt;span style="color:#a6e22e">ms&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">fetchWithPuppeteer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建一个存储任务的队列
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">tasks&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建任务函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">task&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> (&lt;span style="color:#a6e22e">browserIndex&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">browser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">puppeteer&lt;/span>.&lt;span style="color:#a6e22e">launch&lt;/span>({ &lt;span style="color:#a6e22e">headless&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">page&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">browser&lt;/span>.&lt;span style="color:#a6e22e">newPage&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">retries&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">totalRequests&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">success&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#a6e22e">retries&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">success&lt;/span>) { &lt;span style="color:#75715e">// 最大重试次数为3次
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">sleep&lt;/span>(&lt;span style="color:#a6e22e">delay&lt;/span>); &lt;span style="color:#75715e">// 每个请求间隔200ms
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">page&lt;/span>.&lt;span style="color:#66d9ef">goto&lt;/span>(&lt;span style="color:#a6e22e">url&lt;/span>, { &lt;span style="color:#a6e22e">waitUntil&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;load&amp;#39;&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// console.log(`Browser ${browserIndex}: Request ${i + 1} - Page Loaded`);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 模拟滚动页面
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">page&lt;/span>.&lt;span style="color:#a6e22e">evaluate&lt;/span>(() =&amp;gt; window.&lt;span style="color:#a6e22e">scrollBy&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, window.&lt;span style="color:#a6e22e">innerHeight&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">success&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>; &lt;span style="color:#75715e">// 标记成功
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> } &lt;span style="color:#66d9ef">catch&lt;/span> (&lt;span style="color:#a6e22e">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">retries&lt;/span>&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#e6db74">`Browser &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">browserIndex&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">: Request &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> failed - Retry &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">retries&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/3`&lt;/span>, &lt;span style="color:#a6e22e">error&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">retries&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#e6db74">`Browser &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">browserIndex&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">: Request &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> failed after 3 retries.`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">browser&lt;/span>.&lt;span style="color:#a6e22e">close&lt;/span>(); &lt;span style="color:#75715e">// 完成任务后关闭浏览器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Browser &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">browserIndex&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">: All requests completed.`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 启动最多5个浏览器实例并行处理200次请求
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">maxConcurrency&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tasks&lt;/span>.&lt;span style="color:#a6e22e">push&lt;/span>(&lt;span style="color:#a6e22e">task&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)); &lt;span style="color:#75715e">// 将任务推入任务队列
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 等待所有任务完成
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> Promise.&lt;span style="color:#a6e22e">all&lt;/span>(&lt;span style="color:#a6e22e">tasks&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;All requests have been completed.&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fetchWithPuppeteer&lt;/span>().&lt;span style="color:#66d9ef">catch&lt;/span>((&lt;span style="color:#a6e22e">err&lt;/span>) =&amp;gt; &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Error in fetchWithPuppeteer:&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>（经测试同时开20个浏览器运行最佳）每秒能增加一百多的访问量&lt;/p>
&lt;p>引用库介绍：&lt;strong>Puppeteer&lt;/strong> 是一个由 &lt;strong>Google Chrome 团队&lt;/strong>开发的 Node.js 库，用于控制 &lt;strong>Headless Chrome&lt;/strong>（无头浏览器）或者全功能的 Chrome 浏览器。它为开发者提供了一个高级 API，用于自动化浏览器任务，如网页爬取、界面测试、截图、生成 PDF 等。Puppeteer 是一个非常强大的工具，尤其适用于需要与网页交互、执行 JavaScript 或模拟用户行为的场景。&lt;/p></description></item><item><title>kail安装报错 解决办法</title><link>https://think-crow.github.io/blog/zh/kail-install-summary/</link><pubDate>Fri, 01 Nov 2024 15:01:24 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/kail-install-summary/</guid><description>&lt;p>安装步骤网上现成的很多,这里只记录下碰到的问题！&lt;/p>
&lt;h3 id="问题一安装进程卡着不动">问题一：安装进程卡着不动&lt;/h3>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/kail5.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;p>原因：网络问题&lt;/p>
&lt;p>方法：关闭防火墙，外置usb网卡接入kail虚拟机再安装即可。&lt;/p>
&lt;h3 id="问题二开机黑屏只有一个_">问题二：开机黑屏，只有一个_&lt;/h3>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/kail4.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;p>原因：核对一下安装过程碰到的GRUB启动引导器选项选择那里！(如下图就懒得截图，找了两张一样的！原地址：&lt;a href="https://blog.csdn.net/fingue/article/details/127559353">kail安装教程&lt;/a>【图片竟然还有防盗措施，那就截屏吧】)&lt;/p>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/kail2.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/kail3.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;p>方法：确定上述两项没问题后，系统安装完成重启时，虚拟机可能会弹出一个选项，选择连接到虚拟机一下（感觉应该是这个原因，第一次我点的拒绝！）&lt;/p>
&lt;hr>
&lt;h4 id="安装完成后的效果">安装完成后的效果：&lt;/h4>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/kail1.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/kail.png" alt="这是图片" title="图片标题">&lt;/p></description></item><item><title>个人博客网站是什么</title><link>https://think-crow.github.io/blog/zh/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%98%AF%E4%BB%80%E4%B9%88/</link><pubDate>Sun, 27 Oct 2024 21:41:47 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%98%AF%E4%BB%80%E4%B9%88/</guid><description>&lt;p>同公司的网站一样，有一个域名，任何人都可以通过这个域名来访问你的网站！网站内容由你自己决定！&lt;/p>
&lt;h2 id="视频参考">视频参考&lt;/h2>
&lt;!DOCTYPE HTML>
&lt;html lang="en">
&lt;head>
&lt;style type="text/css">
.bilibili_shortcodes {
position: relative;
width: 100%;
height: 0;
padding-bottom: 66%;
margin: auto;
overflow: hidden;
text-align: center;
}
.bilibili_shortcodes iframe {
position: absolute;
width: 100%;
height: 100%;
left: 0;
top: 0;
}
&lt;/style>
&lt;title> 嵌入 Bilibili 视频的页面&lt;/title>
&lt;/head>
&lt;body>
&lt;div class="bilibili_shortcodes">
&lt;iframe
src="https://player.bilibili.com/player.html?bvid=BV1o41jYbE6k&amp;page=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&amp;as_wide=0"
scrolling="no"
frameborder="0"
allowfullscreen="true">
&lt;/iframe>
&lt;/div>
&lt;/body>
&lt;/html>
&lt;p>个人博客网站是什么，个人理解：&lt;/p>
&lt;p>一个网址，每个人都能访问，且页面由你自己来定义，个性化十足！&lt;/p>
&lt;h3 id="什么是个人网站">什么是个人网站&lt;/h3>
&lt;p>官方回答：个人网站通常是个人在网络上创建的独立页面或域名。它可以包括个人简历、作品集、博客、联系方式等，帮助个人建立在线形象或品牌。个人网站可以用于求职、展示创作、分享观点等，具有很强的个性化和自定义功能。&lt;/p>
&lt;h2 id="发展历史">发展历史&lt;/h2>
&lt;p>美国博客的发展经历了几个重要阶段，以下是大致的时间段和历史概述：&lt;/p>
&lt;h3 id="1990年代初期博客的萌芽">1990年代初期：博客的萌芽&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>1994-1999&lt;/strong>：最早的博客形式出现。1994年，个人网站逐渐兴起，成为博客的雏形。1997年，Jorn Barger 创建了术语“博客”（weblog），指的是网络日志。&lt;/li>
&lt;/ul>
&lt;h3 id="1999年博客的正式定义">1999年：博客的正式定义&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>1999年&lt;/strong>：David Winer 和 Evan Williams 发布了 Blogger，这是一种专门用于创建和管理博客的平台，使得普通用户可以轻松发布内容。&lt;/li>
&lt;/ul>
&lt;h3 id="2000年代初博客的普及">2000年代初：博客的普及&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>2000-2005&lt;/strong>：博客逐渐流行，许多媒体机构和个人开始创建博客。此时，WordPress（2003年）和Movable Type（2001年）等平台的出现使得博客创建变得更加容易和多样化。&lt;/li>
&lt;/ul>
&lt;h3 id="2005年博客的高潮">2005年：博客的高潮&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>2005年&lt;/strong>：博客成为主流，许多知名博客如 Daily Kos、Huffington Post 等相继推出，政治、文化、科技等领域的博客迅速增加。同时，博客开始在社交媒体和传统媒体中获得关注。&lt;/li>
&lt;/ul>
&lt;h3 id="2010年代社交媒体与博客的融合">2010年代：社交媒体与博客的融合&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>2010-2015&lt;/strong>：随着社交媒体的兴起（如 Facebook、Twitter），博客的形式和内容发生变化。许多博客与社交媒体平台结合，形成了“微型博客”形式（如 Tumblr）。博客依然是个人和品牌表达的重要方式。&lt;/li>
&lt;/ul>
&lt;h3 id="2020年代博客的转型">2020年代：博客的转型&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>2020至今&lt;/strong>：虽然短视频和社交媒体内容的兴起影响了传统博客，但长形式内容仍然在某些领域保持重要性。个人品牌、专业知识分享和内容营销仍然驱动着博客的发展。&lt;/li>
&lt;/ul>
&lt;h3 id="选择平台">选择平台&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Hugo&lt;/strong>：创建于 2013 年。&lt;/li>
&lt;li>&lt;strong>Hexo&lt;/strong>：创建于 2012 年。&lt;/li>
&lt;li>&lt;strong>Jekyll&lt;/strong>：创建于 2008 年。&lt;/li>
&lt;li>WordPress 最初于 &lt;strong>2003 年&lt;/strong> 发布&lt;/li>
&lt;/ol>
&lt;h3 id="个人网站的市场趋势">个人网站的市场趋势&lt;/h3>
&lt;p>2024年，博客网站仍然非常重要。尽管社交媒体的兴起改变了内容传播的方式，但博客依然在多个方面发挥着关键作用：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>深度内容&lt;/strong>：博客允许您深入探讨主题，提供详细的信息和见解，而社交媒体通常更适合短小精悍的内容。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>个人品牌建设&lt;/strong>：通过定期发布高质量的博客文章，您可以建立个人品牌和专业声誉，吸引特定的受众。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>SEO价值&lt;/strong>：博客有助于提升搜索引擎优化（SEO），增加在搜索引擎中的可见性，从而吸引更多有针对性的流量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>知识分享&lt;/strong>：博客是分享知识、经验和观点的理想平台，能够吸引志同道合的人群，建立社区。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>控制内容&lt;/strong>：拥有自己的博客让您对内容、设计和用户体验有更大的控制权，而社交媒体平台的规则和算法可能随时变化。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>建立信任&lt;/strong>：提供有价值的信息和见解能够增强您与读者之间的信任关系，有助于潜在客户或雇主的决策。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>总之，尽管社交媒体依然占据重要地位，但博客在内容的深度、品牌建设和SEO等方面仍然具有不可替代的价值。&lt;/p>
&lt;h2 id="heading">&lt;/h2>
&lt;h3 id="heading-1">&lt;/h3>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>在长久地无意识地被碎片化信息裹挟后，越来越多的人渐渐觉醒，回到以长文形式记录日常思考沉淀下来的内容。&lt;/p>
&lt;p>未来，个人网站将是新的趋势！&lt;/p></description></item><item><title>是否适合搭建个人网站</title><link>https://think-crow.github.io/blog/zh/%E6%98%AF%E5%90%A6%E9%80%82%E5%90%88%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</link><pubDate>Wed, 09 Oct 2024 21:27:16 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/%E6%98%AF%E5%90%A6%E9%80%82%E5%90%88%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</guid><description>&lt;p>毋庸置疑，一定要搭建一个个人网站，无论你用什么方式！&lt;/p>
&lt;h1 id="为什么每个人都应该拥有一个个人网站">为什么每个人都应该拥有一个个人网站？&lt;/h1>
&lt;p>个人网站是一个更加深远、独立且具有无限潜力的选择。不仅是一种展示自己的方式，更是一种对自我表达、掌控内容和提升价值的承诺。&lt;/p>
&lt;hr>
&lt;h2 id="独立而持久的数字存在">&lt;strong>独立而持久的数字存在&lt;/strong>&lt;/h2>
&lt;p>当你依赖第三方平台（如社交媒体）时，你的内容只是一个数据点，受限于平台规则。而拥有一个个人网站，你将获得完全的掌控权。以下是个人网站不可替代的几个优势：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>打造独特的个人品牌&lt;/strong>&lt;br>
个人网站是你的数字名片，是你在互联网上独一无二的存在。无论是职业生涯中的作品展示，还是兴趣爱好的记录，网站都能帮你讲述你的故事。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>真正拥有你的内容&lt;/strong>&lt;br>
在个人网站上发布内容，意味着你不受平台算法或政策的限制。无论是多年前的文章还是最新的作品，都能永久在线。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>内容永不消失&lt;/strong>&lt;/p>
&lt;p>与社交媒体不同，你在个人网站上的内容不会被算法淹没或平台删除。无论是多年后的回忆，还是重要的职业展示，这些都将永久属于你。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>无限扩展的可能性&lt;/strong>&lt;br>
想添加一段个性化的代码？想尝试新的设计风格？个人网站让你拥有无限的创作自由，而不是受制于模板。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="展示高质量内容的最佳平台">&lt;strong>展示高质量内容的最佳平台&lt;/strong>&lt;/h2>
&lt;p>很多人认为个人网站只是一个博客，但它的潜力远不止于此。一个高质量的个人网站可以帮助你：&lt;/p>
&lt;h3 id="1让你的专业能力脱颖而出">&lt;strong>1.让你的专业能力脱颖而出&lt;/strong>&lt;/h3>
&lt;p>在求职或职业发展中，简历可以告诉别人你做过什么，而个人网站能 &lt;strong>展示你是如何做到的&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>想象一下，你是一位设计师，网站上展示的不只是作品，而是背后的设计思路和实现过程。&lt;/li>
&lt;li>如果你是程序员，你的网站不仅有代码，还能分享解决问题的独特见解。&lt;/li>
&lt;li>对于内容创作者，网站可以是一个汇集了深度文章和研究的个人知识宝库。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>这就是个人网站的力量——展示深度，传递价值，而不是简单的罗列。&lt;/p>
&lt;h3 id="2-打造属于你的个人品牌">&lt;strong>2. 打造属于你的个人品牌&lt;/strong>&lt;/h3>
&lt;blockquote>
&lt;p>在社交媒体时代，你的数字足迹可能是零散的，分布在各种平台中。而一个统一的个人网站能帮你凝聚这些足迹，建立起清晰、独特的个人品牌。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>用一致的设计语言体现你的风格。&lt;/li>
&lt;li>用结构化的内容（如“关于我”、“项目展示”、“博客”）讲述你的故事。&lt;/li>
&lt;li>让访问者记住你的独特性，而不是模糊的“某某用户”。&lt;/li>
&lt;/ul>
&lt;p>无论是求职、接洽客户，还是扩展社交圈，一个专业的个人品牌都能帮你吸引对的人。&lt;/p>
&lt;hr>
&lt;h3 id="3-积累长期价值">&lt;strong>3. 积累长期价值&lt;/strong>&lt;/h3>
&lt;p>博客是动态的，更新是即时的，但真正高质量的个人网站会成为你的 &lt;strong>知识与经验的长期积累中心&lt;/strong>。你可以：&lt;/p>
&lt;ul>
&lt;li>创建专业领域的知识库，展示你的行业见解。&lt;/li>
&lt;li>定期撰写高质量的深度分析，吸引长期关注的读者。&lt;/li>
&lt;li>收录自己的学习笔记、项目总结，既帮助他人，也为自己留存思考的轨迹。&lt;/li>
&lt;/ul>
&lt;p>这些内容不仅会增加网站的吸引力，还能提升你的行业影响力。&lt;/p>
&lt;hr>
&lt;h3 id="4-吸引志同道合的人">&lt;strong>4. 吸引志同道合的人&lt;/strong>&lt;/h3>
&lt;p>一个优秀的个人网站，尤其是有深度见解和持续更新的内容，能够吸引与你价值观相符的人。&lt;/p>
&lt;ul>
&lt;li>写一篇关于你对某个行业趋势的思考，可能会吸引到一位业内大咖关注。&lt;/li>
&lt;li>分享一个技术解决方案，可能会吸引潜在的合作伙伴或雇主联系你。&lt;/li>
&lt;li>分享你独特的兴趣或生活方式，可能会与其他有共同爱好的人产生连接。&lt;/li>
&lt;/ul>
&lt;p>你的网站是你发出的“信号”，能够帮你找到更有意义的连接。&lt;/p>
&lt;hr>
&lt;h3 id="5-开辟更多机会">&lt;strong>5. 开辟更多机会&lt;/strong>&lt;/h3>
&lt;p>有了个人网站，机会将不再是“被动等待”，而是主动去创造。&lt;/p>
&lt;ul>
&lt;li>很多人通过个人网站找到客户、工作机会，甚至获得演讲、出版等邀请。&lt;/li>
&lt;li>网站可以作为一个创业的平台，开设在线课程、销售电子书或提供咨询服务。&lt;/li>
&lt;li>通过提供高价值内容，你还可以逐步发展为某个领域的权威人物，拓展影响力。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="建站方式这么多为什么选择-hugo">&lt;strong>建站方式这么多，为什么选择 Hugo？&lt;/strong>&lt;/h2>
&lt;h3 id="官方回答">官方回答：&lt;/h3>
&lt;blockquote>
&lt;p>在众多工具中，Hugo 是一个理想的选择，尤其适合那些想快速上手但又追求灵活性的人。以下是它的几个突出优势：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>速度极快&lt;/strong>：生成网站的时间几乎是瞬间，即便你的网站规模很大，也能保证加载速度。&lt;/li>
&lt;li>&lt;strong>操作简单&lt;/strong>：无论你是否拥有技术背景，Hugo 都能让你快速搭建一个专业的网站。&lt;/li>
&lt;li>&lt;strong>高度灵活&lt;/strong>：支持多种主题和定制需求，让你的个人网站完全符合你的期望。&lt;/li>
&lt;li>&lt;strong>适合长期维护&lt;/strong>：Hugo 生成的是静态网站，不依赖复杂的后端系统，更安全，维护也更简单。&lt;/li>
&lt;/ul>
&lt;h4 id="适合部署在多种平台">&lt;strong>适合部署在多种平台&lt;/strong>&lt;/h4>
&lt;p>Hugo 生成的静态网站可以轻松部署到 GitHub Pages、Netlify 或 Vercel 等平台，而且部署过程非常快捷。&lt;/p>
&lt;/blockquote>
&lt;h3 id="真实原因">真实原因：&lt;/h3>
&lt;blockquote>
&lt;p>兜兜转转，发现找的就是它，可自己花了五年时间&lt;/p>
&lt;p>另看到的一些科研学者普遍都用的hugo建站，来写文章，且文章很有说服力！尝试过后，确实方便，就大力推崇！&lt;/p>
&lt;p>特点：极简、安全、速度快！&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="结语你准备好拥有个人网站了吗">&lt;strong>结语：你准备好拥有个人网站了吗？&lt;/strong>&lt;/h3>
&lt;p>搭建个人网站不仅是一个展示自我、提升影响力的工具，它更是你在数字世界中的长远投资。它可以帮助你表达自我、塑造个人品牌、积累知识、提升职业竞争力，并提供前所未有的创作自由。无论你是职业人士、创作者，还是生活记录者，个人网站都能为你提供更广阔的天地。&lt;/p>
&lt;p>&lt;code>**最后：最关键的就是兴趣，不管你拿来做什么，这只是你的起点，或者是起步！**&lt;/code>&lt;/p></description></item><item><title>Markdown文档语法</title><link>https://think-crow.github.io/blog/zh/markdown%E6%96%87%E6%A1%A3%E8%AF%AD%E6%B3%95/</link><pubDate>Wed, 09 Oct 2024 21:26:06 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/markdown%E6%96%87%E6%A1%A3%E8%AF%AD%E6%B3%95/</guid><description>&lt;p>把Markdown文档比作word的话，这篇文章就是教你怎么使用word.&lt;/p>
&lt;p>什么是Markdown文档：技术人眼中很方便的写作工具！&lt;/p>
&lt;p>&lt;strong>官方解释&lt;/strong>：Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。&lt;/p>
&lt;h2 id="1标题语法">1、标题语法&lt;/h2>
&lt;p>要创建标题，请在单词或短语前面添加井号 (&lt;code>#&lt;/code>) 。&lt;code>#&lt;/code> 的数量代表了标题的级别。例如，添加三个 &lt;code>#&lt;/code> 表示创建一个三级标题 (&lt;code>&amp;lt;h3&amp;gt;&lt;/code>) (例如：&lt;code>### My Header&lt;/code>)。&lt;/p>
&lt;h1 id="--文字-一级标题"># +文字 ：一级标题&lt;/h1>
&lt;h2 id="-文字二级标题">## +文字：二级标题&lt;/h2>
&lt;h3 id="-文字三级标题">### +文字：三级标题&lt;/h3>
&lt;h2 id="2引用语法">2、引用语法&lt;/h2>
&lt;p>要创建块引用，请在段落前添加一个 &lt;code>&amp;gt;&lt;/code> 符号。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&amp;gt; Dorothy followed her through many of the beautiful rooms in her castle.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>展示效果：&lt;/p>
&lt;blockquote>
&lt;p>Dorothy followed her through many of the beautiful rooms in her castle.&lt;/p>
&lt;/blockquote>
&lt;h2 id="3markdown-代码语法">3、Markdown 代码语法&lt;/h2>
&lt;p>要将单词或短语表示为代码，请将其包裹在反引号 (```) 中。&lt;/p>
&lt;p>展示效果（红字部分）：&lt;/p>
&lt;p>At the command prompt, type &lt;code>nano&lt;/code>.&lt;/p>
&lt;h2 id="4markdown-分隔线语法">4、Markdown 分隔线语法&lt;/h2>
&lt;p>要创建分隔线，请在单独一行上使用三个或多个星号 (&lt;code>***&lt;/code>)、破折号 (&lt;code>---&lt;/code>) 或下划线 (&lt;code>___&lt;/code>) ，并且不能包含其他内容。&lt;/p>
&lt;p>展示效果（从上到下依次：***、&amp;mdash;、___）：&lt;/p>
&lt;hr>
&lt;hr>
&lt;hr>
&lt;h2 id="5markdown-链接语法">5、Markdown 链接语法&lt;/h2>
&lt;p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。&lt;/p>
&lt;p>超链接Markdown语法代码：&lt;code>[超链接显示名](超链接地址 &amp;quot;超链接title&amp;quot;)&lt;/code>&lt;/p>
&lt;p>对应的HTML代码：&lt;code>&amp;lt;a href=&amp;quot;超链接地址&amp;quot; title=&amp;quot;超链接title&amp;quot;&amp;gt;超链接显示名&amp;lt;/a&amp;gt;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>这是一个链接 [Markdown参考网站](https://markdown.com.cn/basic-syntax/)。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>展示效果：&lt;/p>
&lt;p>这是一个链接 &lt;a href="https://markdown.com.cn/basic-syntax/">Markdown参考网站&lt;/a>&lt;/p>
&lt;h1 id="6markdown-图片语法">6、Markdown 图片语法&lt;/h1>
&lt;p>要添加图像，请使用感叹号 (&lt;code>!&lt;/code>), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。&lt;/p>
&lt;p>插入图片Markdown语法代码：&lt;code>![图片alt](图片链接 &amp;quot;图片title&amp;quot;)&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>![这是图片](/images/blog/1.png &amp;#34;图片标题&amp;#34;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://think-crow.github.io/images/blog/1.jpg" alt="这是图片" title="图片标题">&lt;/p>
&lt;p>图片链接地址也可以为外链地址，像这样：https://www.rwany.net/uploads/money/weixin.jpg（浏览器里面输入这个地址能直接访问到！）&lt;/p>
&lt;p>外链地址的优势：博客搬家时，大量引用的图片地址仍然有效！不会占用服务器资源，增加访问速度！&lt;/p>
&lt;hr>
&lt;p>最后：上述只是部分Markdown文档语法，完全够新手使用，后续可以自己学习更多的语法来编写自己的文章！&lt;/p></description></item><item><title>git基础及怎么PR</title><link>https://think-crow.github.io/blog/zh/git%E6%95%99%E7%A8%8B/</link><pubDate>Wed, 09 Oct 2024 21:00:43 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/git%E6%95%99%E7%A8%8B/</guid><description>&lt;p>网站文档更新到网站的必要学习步骤，参考 标题1 即可！.&lt;/p>
&lt;h2 id="git上传操作步骤图解">git上传操作步骤图解：&lt;/h2>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/git%E6%80%BB%E7%BB%93.png" alt="git总结">&lt;/p>
&lt;p>备注：git是一个开源的分布式版本管理系统，可以随时切换你提交的版本。&lt;/p>
&lt;p>上述工作区，暂存区，本地仓库，远程仓库是git提交的一整个过程！&lt;/p>
&lt;p>工作区也就是你的代码文件夹，暂存区就是你将要提交的内容，本地仓库就是已经提交了内容但没有上传远端，最后就是上传远端（上传远端之后，若有不妥可版本回退！即回退到之前任意一次提交的的内容）。&lt;/p>
&lt;h2 id="1git顺序上传步骤">1、git顺序上传步骤：&lt;/h2>
&lt;p>1、git init: 在当前目录初始化一个新的 Git 仓库。&lt;/p>
&lt;p>2、git add &lt;!-- raw HTML omitted -->: 将文件添加到暂存区。&lt;/p>
&lt;p>3、git commit -m &amp;ldquo;Commit message&amp;rdquo;: 将暂存区的文件提交到本地仓库。&lt;/p>
&lt;p>4、git remote add &amp;lt;仓库名&amp;gt; &amp;lt;远程仓库地址&amp;gt;: 添加一个新的远程仓库。&lt;/p>
&lt;p>5、git push -u &amp;lt;仓库名&amp;gt; &amp;lt;分支名&amp;gt;: 将本地提交推送到远程仓库。&lt;/p>
&lt;p>&lt;strong>备注：上述5个步骤只是首次执行的命令，后续只执行2、3、5即可！&lt;/strong>&lt;/p>
&lt;h2 id="2git常用查看命令">2、git常用查看命令：&lt;/h2>
&lt;p>1、git status 查看暂存区与缓存区的状态。&lt;/p>
&lt;p>2、git remote -v 显示远程仓库地址的详细信息。&lt;/p>
&lt;p>3、git branch &amp;lt;分支名&amp;gt; 列出本地分支。&lt;/p>
&lt;p>4、git branch -m &amp;lt;分支名&amp;gt; 重命名当前分支。&lt;/p>
&lt;p>5、git checkout &amp;lt;分支名&amp;gt; 切换到指定分支。&lt;/p>
&lt;p>6、git checkout -b &amp;lt;分支名&amp;gt; 创建并切换到指定分支。&lt;/p>
&lt;p>7、git branch -d &amp;lt;分支名&amp;gt; 删除分支&lt;/p>
&lt;p>8、git remote rename &amp;lt;旧仓库名称&amp;gt; &amp;lt;新仓库名称&amp;gt; 重命名本地 Git 仓库中的远程仓库名称&lt;/p>
&lt;h2 id="3注意事项">3、注意事项&lt;/h2>
&lt;p>1、命令不要敲错和漏敲了，一个字母敲错就error，很难发现的！&lt;/p>
&lt;p>2、报错看error，根据error找问题（百度和gpt很香的）。&lt;/p>
&lt;p>3、git push会经常碰到网络问题，可以设置ssh密钥（简略步骤）！&lt;/p>
&lt;ul>
&lt;li>ssh-keygen -t rsa -b 4096 -C &amp;ldquo;邮箱地址xxx@xxx.com&amp;rdquo; (密钥保存在 ~家目录/.ssh的文件夹)&lt;/li>
&lt;li>id_rsa.pub里面的内容复制到GitHub的settings的SSH and GPG keys里面即可&lt;/li>
&lt;/ul>
&lt;p>4、参考文档是个好东西，要看细致了，漏看东西很致命！&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="4怎么pr参考文档httpsdtstackgithubiochunjun-webdocschunjundocscontribute-pr">4、怎么PR（&lt;a href="https://dtstack.github.io/chunjun-web/docs/chunjunDocs/contribute-pr/">参考文档&lt;/a>）&lt;/h2>
&lt;h3 id="第一步fork仓库到自己仓库">第一步：fork仓库到自己仓库。&lt;/h3>
&lt;h3 id="第二步clone到本地">第二步：clone到本地。&lt;/h3>
&lt;h3 id="第三步添加源仓库地址链接upstream代表远程源仓库">第三步：添加源仓库地址链接。（upstream代表远程源仓库）&lt;/h3>
&lt;pre tabindex="0">&lt;code> # add upstream
git remote add upstream https://github.com/DTStack/chunjun.git
# 查看远程仓库设置
$ git remote -v
origin https://github.com/your_name/chunjun.git (fetch)
origin https://github.com/your_name/chunjun.git (push)
upstream https://github.com/DTStack/chunjun.git (fetch)
upstream https://github.com/DTStack/chunjun.git (push)
&lt;/code>&lt;/pre>&lt;h3 id="第四步提交代码">第四步：提交代码&lt;/h3>
&lt;p>任何一个提交都要基于最新的分支 &lt;strong>切换分支&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code># 从源仓库（upstream）拉取所有分支信息和更新。
$ git remote update upstream -p
# 创建一个新的分支 branch_name，并切换到该分支。
$ git checkout -b branch_name
# 从源仓库 upstream 的 master 分支拉取最新代码，并合并到当前本地分支。
$ git pull upstream master:branch_name
Already up to date.
&lt;/code>&lt;/pre>&lt;p>&lt;strong>本地修改代码后，提交commit&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code># 提交commit前先进行代码格式化
$ mvn spotless:apply
git commit -a -m &amp;#34;&amp;lt;you_commit_message&amp;gt;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>rebase远程分支&lt;/strong>&lt;/p>
&lt;p>这一步很重要，因为我们仓库中的chunjun代码很有可能已经落后于社区，所以我们 push commit前需要rebase，保证我们的commit是基于社区最新的代码，很多小伙伴没有这一步导致提交的pr当中包含了其他人的commit&lt;/p>
&lt;pre tabindex="0">&lt;code># 先从远程仓库拉取最新代码，确保本地了解远程分支的状态：
$ git fetch upstream
$ git rebase upstream/main
假设你正在一个名为 feature/branch_name 的分支上，远程主分支是 upstream/main。
运行后会发生以下情况：
Git 会将 feature/branch_name 分支上的提交临时保存起来。
将 upstream/main 的最新提交拉到本地。
重新将 feature/branch_name 的提交逐一应用到 upstream/main 的最新代码之上。
&lt;/code>&lt;/pre>&lt;p>*rebase后有可能出现代码冲突，一般是由于多人编辑同一个文件引起的，只需要根据提示打开冲突文件对冲突部分进行修改，将提示的冲突文件的冲突都解决后，执行&lt;/p>
&lt;pre tabindex="0">&lt;code>$ git add .
$ git rebase --continue
&lt;/code>&lt;/pre>&lt;p>依此往复，直至屏幕出现类似rebase successful字样即可&lt;/p>
&lt;p>*rebase之后代码可能无法正常推送，需要&lt;code>git push -f&lt;/code> 强制推送，强制推送是一个有风险的操作，操作前请仔细检查以避免出现无关代码被强制覆盖的问题&lt;/p>
&lt;h2 id="第五步">第五步：&lt;/h2>
&lt;p>&lt;strong>push到github仓库&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>$ git push origin branch_name
&lt;/code>&lt;/pre>&lt;h2 id="第六步提交pr">第六步：提交pr&lt;/h2>
&lt;h3 id="方法-3-在作者没有合并前删除所有本地提交并清理远程-pr">方法 3: 在作者没有合并前，删除所有本地提交并清理远程 PR&lt;/h3>
&lt;p>1、删除所有提交（硬重置到远程分支）&lt;/p>
&lt;pre tabindex="0">&lt;code>git reset --hard origin/main
&lt;/code>&lt;/pre>&lt;p>2、强制推送删除更改到远程仓库&lt;/p>
&lt;pre tabindex="0">&lt;code>git push origin music --force
&lt;/code>&lt;/pre>&lt;p>&lt;strong>一分耕耘，一分收获， 加油！&lt;/strong>&lt;/p>
&lt;p>​&lt;/p></description></item><item><title>为什么要建博客</title><link>https://think-crow.github.io/blog/zh/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link><pubDate>Sat, 21 Sep 2024 00:39:14 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid><description>&lt;p>一些人是因为热爱，一些人是因为被告知很重要，而一些人真真正正看到了它的价值！&lt;/p>
&lt;h3 id="原因一认识到了博客的重要性之后希望更多的人也能有博客网站">原因一：认识到了博客的重要性之后，希望更多的人也能有博客网站！&lt;/h3>
&lt;p>毕业七年后，才发现博客对青年时期的人生发展帮助如此之大！&lt;/p>
&lt;ul>
&lt;li>如果你是技术专业的，对你受益最大，做好技术性文档，将是你个人品牌及实力的见证！&lt;/li>
&lt;li>如果你喜欢看书或写作，也很适合搭建个人博客。&lt;/li>
&lt;li>如果你不太会讲话，个人网站无疑最佳选择，让我们通过文字来表达自己！&lt;/li>
&lt;li>如果你感觉最近无所事事，焦虑无常，可以先搭建个网站试一下！&lt;/li>
&lt;li>总归，个人网站对所有大学生适用，可以不相信我的眼光，但你要相信中国籍统计学家和数据科学家谢大的眼光：“在跟在校学生交流的时候，我通常会提一个观点，叫 “我网故我在”，意思是如果你没有一个个人网站，你就不存在。”！&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>个人观点或许有些武断，参照其他文字：&lt;/strong>&lt;/p>
&lt;h3 id="原因二书面材料的系统性持久性备忘性和可查性">原因二：书面材料的系统性、持久性、备忘性和可查性&lt;/h3>
&lt;p>主流认同模式一旦成型，无论是否合理，也不管有多少不足，我们只有去适应它，而不要幻想它因你而改变，对于能量极其有限的普罗大众而言，更是这样。在现有注重标签、经验和成功案例社会认同模式下，一个人要想出人头地，成为职场达人，必须想方设法构筑丰富而且结构合理的经验体系，甚至将其用书面材料的形式梳理出来。&lt;strong>&lt;code>与口头描述相比，书面材料在系统性、持久性、备忘性和可查性方面，毕竟有着非常突出和难以替代的优势&lt;/code>&lt;/strong>。在激烈的社会竞争中，很多时候即使对方没有要求我们提供这些东西，但只要你能拿出来，成功的天平也肯定会向你倾斜。&lt;/p>
&lt;h3 id="原因三分享即价值">原因三：分享即价值&lt;/h3>
&lt;p>&lt;a href="https://yanlinlin.cn/2022/01/17/%E5%88%86%E4%BA%AB%E5%8D%B3%E4%BB%B7%E5%80%BC%E5%86%99%E7%BB%99%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E6%B1%9F%E6%B9%96%E7%9A%84%E5%B0%8F%E6%9C%8B%E5%8F%8B%E4%BB%AC/">分享即价值！&lt;/a>“真的强烈建议即将步入江湖的小朋友们，趁着自己还有大把的富余时间，多在公开平台上进行分享，而且最好是不带功利性地进行分享。**互联网是有记忆的，这些都会成为自己将来的品牌资本。你越认真对待它，它给你的回馈就越丰厚。**更何况，要把一项技术理解清楚，再讲出来，这本身就是一个高效率的学习过程，而且这种学习所得，是很难被遗忘的。”&lt;/p>
&lt;h4 id="原因四让别人在最短时间内了解一个立体的你">原因四：让别人在最短时间内了解一个立体的你&lt;/h4>
&lt;p>&lt;a href="https://hongtaoh.com/cn/2021/06/17/homepage/">我为什么强烈建议你有一个个人网站&lt;/a>：让别人在最短时间内了解一个立体的你（网站上有你的自我介绍，有你做过的所有项目，有你经年累月写的博客。你觉得哪个效果好？），捕捉瞬间的想法与灵感 ，激励你不断进步和积累，分享经验，记录生活点滴&lt;/p>
&lt;hr>
&lt;h2 id="关于这个被问到的问题">关于这个被问到的问题&lt;/h2>
&lt;p>1、建这个有什么用？&lt;/p>
&lt;p>仍然有这么多人都未意识到博客的重要性！如同曾经的自己一样！&lt;/p>
&lt;p>或许可以先自己了解一下！&lt;/p>
&lt;hr>
&lt;h2 id="个人网站官方介绍">个人网站官方介绍：&lt;/h2>
&lt;h3 id="维基百科描述">维基百科描述&lt;/h3>
&lt;p>&lt;strong>个人网站&lt;/strong>是指由个人或团体、工作室（一般不超过3人）根据自己的兴趣爱好或价值取向，为了展示自我、与人交流，以非盈利为目的（有的个人网站会植入广告）而在&lt;a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C">网络&lt;/a>上建立的供其他人浏览的&lt;a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%AB%99">网站&lt;/a>。&lt;/p>
&lt;h3 id="百度百科描述">百度百科描述&lt;/h3>
&lt;p>个人网站，是指&lt;a href="https://baike.baidu.com/item/%E5%9B%A0%E7%89%B9%E7%BD%91/114119?fromModule=lemma_inlink">因特网&lt;/a>上一块固定的面向全世界发布消息的地方。&lt;/p>
&lt;hr>
&lt;p>目的：让家乡的人们都能有这样的网站，都能和大城市的人站在一个起点上！&lt;/p>
&lt;p>是否适合建站：&lt;/p>
&lt;p>1、假设你28岁之前，那毋庸置疑！无论如何都要建一个，并好好维护！&lt;/p>
&lt;p>2、假设你28岁之后，可根据自身情况，来决定是否建站！&lt;/p>
&lt;p>3、假设你是一个女生、技术性的东西或许会有一些难度！&lt;/p>
&lt;p>4、要是碰见年轻时的自己，死皮赖脸也要让他建个网站！&lt;/p>
&lt;h1 id="好东西都是不流通的恭喜你现在碰到了其一">好东西都是不流通的！恭喜你，现在碰到了其一！&lt;/h1>
&lt;p>缘起缘灭，缘聚缘散！见到就是缘分！&lt;/p></description></item><item><title>快速带你了解hugo建站知识</title><link>https://think-crow.github.io/blog/zh/%E5%BF%AB%E9%80%9F%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3%E5%BB%BA%E7%AB%99%E7%9F%A5%E8%AF%86/</link><pubDate>Fri, 20 Sep 2024 00:39:14 +0800</pubDate><guid>https://think-crow.github.io/blog/zh/%E5%BF%AB%E9%80%9F%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3%E5%BB%BA%E7%AB%99%E7%9F%A5%E8%AF%86/</guid><description>&lt;p>常用的建站方式有hugo、hexo、jekyll、wordpress，这里为大家介绍hugo建站。&lt;/p>
&lt;h3 id="1-什么是-hugo">1. 什么是 Hugo&lt;/h3>
&lt;p>&lt;a href="gohugo.io">Hugo&lt;/a> 是一个快速、灵活的静态网站生成器，适用于博客、文档和个人网站等。官网地址：&lt;a href="https://gohugo.io">gohugo.io&lt;/a>&lt;/p>
&lt;p>通俗的说：hugo可以把Markdown文档（大众眼中的word）生成静态网页！&lt;/p>
&lt;h3 id="2-为什么用-hugo">2. 为什么用 Hugo&lt;/h3>
&lt;p>兜兜转转，发现找的就是它，可自己花了五年时间&lt;/p>
&lt;p>另看到的一些科研学者普遍都用的hugo建站，来写文章，且文章很有说服力！尝试过后，确实方便，就大力推崇！&lt;/p>
&lt;p>特点：简洁、速度快！&lt;/p>
&lt;h3 id="3-是否需要服务器域名">3. 是否需要服务器域名？&lt;/h3>
&lt;p>不需要域名服务器（当然，如果你想，也可以自己配置）&lt;/p>
&lt;p>配置好主题之后，上传完仓库，GitHub pages会自动编译文章生成网页（每次更新后大概需要20s左右即可重新访问）&lt;/p>
&lt;p>本地编译预览效果时间不到1s，文章越多和不同网站对比的效果越明显！&lt;/p>
&lt;h3 id="4-需要的技术知识">4. 需要的技术知识&lt;/h3>
&lt;ul>
&lt;li>基本的 Markdown 语法&lt;/li>
&lt;li>Git 和 GitHub 使用&lt;/li>
&lt;li>HTML 和 CSS 的基础知识（可选）&lt;/li>
&lt;/ul>
&lt;h3 id="5-优缺点">5. 优缺点&lt;/h3>
&lt;p>&lt;strong>优点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>自由度高，可以完全自定义&lt;/li>
&lt;li>开源且免费&lt;/li>
&lt;li>维护和托管成本低&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>缺点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>初始设置可能有些复杂&lt;/li>
&lt;li>更新内容需要使用 Git 命令行&lt;/li>
&lt;li>使用的是开源的主题。&lt;/li>
&lt;/ul>
&lt;h3 id="6-具体操作流程">6. 具体操作流程&lt;/h3>
&lt;ol>
&lt;li>注册&lt;a href="https://github.com/">Github&lt;/a>账户（建议用名字命名：例如：haoshuang ；三个字的名字取后两个拼音，两个字取全名拼音。因为Github默认生成的域名为：账户名.github.io)。&lt;/li>
&lt;li>学习&lt;a href="https://2029.today/blog/zh/git%E6%95%99%E7%A8%8B/">git基础&lt;/a>及&lt;a href="https://2029.today/blog/zh/markdown%E6%96%87%E6%A1%A3%E8%AF%AD%E6%B3%95/">markdown基本语法&lt;/a>。(必学)。&lt;/li>
&lt;li>&lt;a href="https://2029.today/blog/zh/%E6%80%8E%E4%B9%88%E9%80%89hugo%E4%B8%BB%E9%A2%98/">选择hugo主题&lt;/a>，并做部分修改。&lt;/li>
&lt;li>安装运行环境，并上传到github并启用 GitHub Pages。&lt;/li>
&lt;/ol>
&lt;p>简单的四步，你就有了一个个人博客！&lt;/p>
&lt;p>当然，你可以选择此篇博主为你搭建，只收取技术支持的劳动费用，价廉实惠。微信：net-rwany！&lt;/p>
&lt;h3 id="7-注意事项">7. 注意事项&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>不要暴漏自己身边人的信息！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>访客多时注意自己的言论！&lt;/p>
&lt;/li>
&lt;li>
&lt;p>网站采用的是开源的博客框架！&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;/li>
&lt;/ul>
&lt;h3 id="8拓展">8、拓展&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://2029.today/blog/zh/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BB%BA%E5%8D%9A%E5%AE%A2/">为什么要建博客&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://2029.today/blog/zh/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%98%AF%E4%BB%80%E4%B9%88/">个人博客网站是什么&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://d.cosx.org/d/421538">大家贴一下自己的博客地址吧&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr></description></item><item><title>如何选择选hugo主题</title><link>https://think-crow.github.io/blog/zh/%E6%80%8E%E4%B9%88%E9%80%89hugo%E4%B8%BB%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://think-crow.github.io/blog/zh/%E6%80%8E%E4%B9%88%E9%80%89hugo%E4%B8%BB%E9%A2%98/</guid><description>&lt;p>hugo官网：https://gohugo.io&lt;/p>
&lt;h1 id="选择主题">选择主题：&lt;/h1>
&lt;h2 id="1进入hugo官网选择导航栏的themes也可右键翻译为中文">1、进入hugo官网，选择导航栏的themes（也可右键翻译为中文）&lt;/h2>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/how-hugo-themes/1.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;h2 id="2挑选合适的主题">2、挑选合适的主题&lt;/h2>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/how-hugo-themes/2.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;h2 id="预览">预览：&lt;/h2>
&lt;h2 id="1点击下载或donwload进入github仓库页面">1、点击下载或donwload，进入github仓库页面&lt;/h2>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/how-hugo-themes/3.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;h2 id="2进入仓库页面后右边这个蓝色的一串便是预览地址右边没有的话或许是放在了仓库下面的文档说明里面">2、进入仓库页面后，右边这个蓝色的一串便是预览地址（右边没有的话或许是放在了仓库下面的文档说明里面）&lt;/h2>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/how-hugo-themes/4.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;h1 id="预览效果">预览效果&lt;/h1>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/how-hugo-themes/5.png" alt="这是图片" title="图片标题">&lt;/p>
&lt;p>&lt;img src="https://think-crow.github.io/images/blog/how-hugo-themes/6.png" alt="这是图片" title="图片标题">&lt;/p></description></item></channel></rss>